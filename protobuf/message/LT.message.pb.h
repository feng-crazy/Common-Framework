// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LT.message.proto

#ifndef PROTOBUF_LT_2emessage_2eproto__INCLUDED
#define PROTOBUF_LT_2emessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_LT_2emessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[27];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPointXYZImpl();
void InitDefaultsPointXYZ();
void InitDefaultsLocationImpl();
void InitDefaultsLocation();
void InitDefaultsResponseStatusImpl();
void InitDefaultsResponseStatus();
void InitDefaultsUpdateEventImpl();
void InitDefaultsUpdateEvent();
void InitDefaultsTerminalExceptStatusImpl();
void InitDefaultsTerminalExceptStatus();
void InitDefaultsBasesExceptStatusImpl();
void InitDefaultsBasesExceptStatus();
void InitDefaultsTerminalProperty_SensorImpl();
void InitDefaultsTerminalProperty_Sensor();
void InitDefaultsTerminalPropertyImpl();
void InitDefaultsTerminalProperty();
void InitDefaultsBaseStationProperty_PoseImpl();
void InitDefaultsBaseStationProperty_Pose();
void InitDefaultsBaseStationPropertyImpl();
void InitDefaultsBaseStationProperty();
void InitDefaultsTerminalPropertyRequestImpl();
void InitDefaultsTerminalPropertyRequest();
void InitDefaultsTerminalPropertyResponseImpl();
void InitDefaultsTerminalPropertyResponse();
void InitDefaultsTerminalActionRequestImpl();
void InitDefaultsTerminalActionRequest();
void InitDefaultsTerminalActionResponseImpl();
void InitDefaultsTerminalActionResponse();
void InitDefaultsBaseStationPropertyRequestImpl();
void InitDefaultsBaseStationPropertyRequest();
void InitDefaultsBaseStationPropertyResponseImpl();
void InitDefaultsBaseStationPropertyResponse();
void InitDefaultsBaseStationActionRequestImpl();
void InitDefaultsBaseStationActionRequest();
void InitDefaultsBaseStationActionResponseImpl();
void InitDefaultsBaseStationActionResponse();
void InitDefaultsGuiHeartbeatRequestImpl();
void InitDefaultsGuiHeartbeatRequest();
void InitDefaultsGuiHeartbeatResponseImpl();
void InitDefaultsGuiHeartbeatResponse();
void InitDefaultsTerminalHeartbeatRequestImpl();
void InitDefaultsTerminalHeartbeatRequest();
void InitDefaultsTerminalHeartbeatResponseImpl();
void InitDefaultsTerminalHeartbeatResponse();
void InitDefaultsFieldPropertyUpdateRequest_FieldScopeImpl();
void InitDefaultsFieldPropertyUpdateRequest_FieldScope();
void InitDefaultsFieldPropertyUpdateRequestImpl();
void InitDefaultsFieldPropertyUpdateRequest();
void InitDefaultsFieldPropertyUpdateResponseImpl();
void InitDefaultsFieldPropertyUpdateResponse();
void InitDefaultsControllerBroadcastImpl();
void InitDefaultsControllerBroadcast();
void InitDefaultsBroadcastResponseImpl();
void InitDefaultsBroadcastResponse();
inline void InitDefaults() {
  InitDefaultsPointXYZ();
  InitDefaultsLocation();
  InitDefaultsResponseStatus();
  InitDefaultsUpdateEvent();
  InitDefaultsTerminalExceptStatus();
  InitDefaultsBasesExceptStatus();
  InitDefaultsTerminalProperty_Sensor();
  InitDefaultsTerminalProperty();
  InitDefaultsBaseStationProperty_Pose();
  InitDefaultsBaseStationProperty();
  InitDefaultsTerminalPropertyRequest();
  InitDefaultsTerminalPropertyResponse();
  InitDefaultsTerminalActionRequest();
  InitDefaultsTerminalActionResponse();
  InitDefaultsBaseStationPropertyRequest();
  InitDefaultsBaseStationPropertyResponse();
  InitDefaultsBaseStationActionRequest();
  InitDefaultsBaseStationActionResponse();
  InitDefaultsGuiHeartbeatRequest();
  InitDefaultsGuiHeartbeatResponse();
  InitDefaultsTerminalHeartbeatRequest();
  InitDefaultsTerminalHeartbeatResponse();
  InitDefaultsFieldPropertyUpdateRequest_FieldScope();
  InitDefaultsFieldPropertyUpdateRequest();
  InitDefaultsFieldPropertyUpdateResponse();
  InitDefaultsControllerBroadcast();
  InitDefaultsBroadcastResponse();
}
}  // namespace protobuf_LT_2emessage_2eproto
namespace LTMessage {
class BaseStationActionRequest;
class BaseStationActionRequestDefaultTypeInternal;
extern BaseStationActionRequestDefaultTypeInternal _BaseStationActionRequest_default_instance_;
class BaseStationActionResponse;
class BaseStationActionResponseDefaultTypeInternal;
extern BaseStationActionResponseDefaultTypeInternal _BaseStationActionResponse_default_instance_;
class BaseStationProperty;
class BaseStationPropertyDefaultTypeInternal;
extern BaseStationPropertyDefaultTypeInternal _BaseStationProperty_default_instance_;
class BaseStationPropertyRequest;
class BaseStationPropertyRequestDefaultTypeInternal;
extern BaseStationPropertyRequestDefaultTypeInternal _BaseStationPropertyRequest_default_instance_;
class BaseStationPropertyResponse;
class BaseStationPropertyResponseDefaultTypeInternal;
extern BaseStationPropertyResponseDefaultTypeInternal _BaseStationPropertyResponse_default_instance_;
class BaseStationProperty_Pose;
class BaseStationProperty_PoseDefaultTypeInternal;
extern BaseStationProperty_PoseDefaultTypeInternal _BaseStationProperty_Pose_default_instance_;
class BasesExceptStatus;
class BasesExceptStatusDefaultTypeInternal;
extern BasesExceptStatusDefaultTypeInternal _BasesExceptStatus_default_instance_;
class BroadcastResponse;
class BroadcastResponseDefaultTypeInternal;
extern BroadcastResponseDefaultTypeInternal _BroadcastResponse_default_instance_;
class ControllerBroadcast;
class ControllerBroadcastDefaultTypeInternal;
extern ControllerBroadcastDefaultTypeInternal _ControllerBroadcast_default_instance_;
class FieldPropertyUpdateRequest;
class FieldPropertyUpdateRequestDefaultTypeInternal;
extern FieldPropertyUpdateRequestDefaultTypeInternal _FieldPropertyUpdateRequest_default_instance_;
class FieldPropertyUpdateRequest_FieldScope;
class FieldPropertyUpdateRequest_FieldScopeDefaultTypeInternal;
extern FieldPropertyUpdateRequest_FieldScopeDefaultTypeInternal _FieldPropertyUpdateRequest_FieldScope_default_instance_;
class FieldPropertyUpdateResponse;
class FieldPropertyUpdateResponseDefaultTypeInternal;
extern FieldPropertyUpdateResponseDefaultTypeInternal _FieldPropertyUpdateResponse_default_instance_;
class GuiHeartbeatRequest;
class GuiHeartbeatRequestDefaultTypeInternal;
extern GuiHeartbeatRequestDefaultTypeInternal _GuiHeartbeatRequest_default_instance_;
class GuiHeartbeatResponse;
class GuiHeartbeatResponseDefaultTypeInternal;
extern GuiHeartbeatResponseDefaultTypeInternal _GuiHeartbeatResponse_default_instance_;
class Location;
class LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class PointXYZ;
class PointXYZDefaultTypeInternal;
extern PointXYZDefaultTypeInternal _PointXYZ_default_instance_;
class ResponseStatus;
class ResponseStatusDefaultTypeInternal;
extern ResponseStatusDefaultTypeInternal _ResponseStatus_default_instance_;
class TerminalActionRequest;
class TerminalActionRequestDefaultTypeInternal;
extern TerminalActionRequestDefaultTypeInternal _TerminalActionRequest_default_instance_;
class TerminalActionResponse;
class TerminalActionResponseDefaultTypeInternal;
extern TerminalActionResponseDefaultTypeInternal _TerminalActionResponse_default_instance_;
class TerminalExceptStatus;
class TerminalExceptStatusDefaultTypeInternal;
extern TerminalExceptStatusDefaultTypeInternal _TerminalExceptStatus_default_instance_;
class TerminalHeartbeatRequest;
class TerminalHeartbeatRequestDefaultTypeInternal;
extern TerminalHeartbeatRequestDefaultTypeInternal _TerminalHeartbeatRequest_default_instance_;
class TerminalHeartbeatResponse;
class TerminalHeartbeatResponseDefaultTypeInternal;
extern TerminalHeartbeatResponseDefaultTypeInternal _TerminalHeartbeatResponse_default_instance_;
class TerminalProperty;
class TerminalPropertyDefaultTypeInternal;
extern TerminalPropertyDefaultTypeInternal _TerminalProperty_default_instance_;
class TerminalPropertyRequest;
class TerminalPropertyRequestDefaultTypeInternal;
extern TerminalPropertyRequestDefaultTypeInternal _TerminalPropertyRequest_default_instance_;
class TerminalPropertyResponse;
class TerminalPropertyResponseDefaultTypeInternal;
extern TerminalPropertyResponseDefaultTypeInternal _TerminalPropertyResponse_default_instance_;
class TerminalProperty_Sensor;
class TerminalProperty_SensorDefaultTypeInternal;
extern TerminalProperty_SensorDefaultTypeInternal _TerminalProperty_Sensor_default_instance_;
class UpdateEvent;
class UpdateEventDefaultTypeInternal;
extern UpdateEventDefaultTypeInternal _UpdateEvent_default_instance_;
}  // namespace LTMessage
namespace LTMessage {

enum Location_LocationType {
  Location_LocationType_LOC_SENSOR_RAW = 0,
  Location_LocationType_LOC_SENSOR_FILTERED = 1,
  Location_LocationType_LOC_ROBOT_FILTERED = 2,
  Location_LocationType_LOC_SENSOR_FILTERED_NOIMU = 3,
  Location_LocationType_LOC_ROBOT_FILTERED_NOIMU = 4,
  Location_LocationType_LOC_SENSOR_RAW_UNREGISTERED_BS = 5,
  Location_LocationType_LOC_SENSOR_FILTERED0 = 6,
  Location_LocationType_LOC_SENSOR_FILTERED1 = 7,
  Location_LocationType_Location_LocationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Location_LocationType_Location_LocationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Location_LocationType_IsValid(int value);
const Location_LocationType Location_LocationType_LocationType_MIN = Location_LocationType_LOC_SENSOR_RAW;
const Location_LocationType Location_LocationType_LocationType_MAX = Location_LocationType_LOC_SENSOR_FILTERED1;
const int Location_LocationType_LocationType_ARRAYSIZE = Location_LocationType_LocationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Location_LocationType_descriptor();
inline const ::std::string& Location_LocationType_Name(Location_LocationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Location_LocationType_descriptor(), value);
}
inline bool Location_LocationType_Parse(
    const ::std::string& name, Location_LocationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Location_LocationType>(
    Location_LocationType_descriptor(), name, value);
}
enum ResponseStatus_StatusCode {
  ResponseStatus_StatusCode_OK = 0,
  ResponseStatus_StatusCode_FAIL = 1,
  ResponseStatus_StatusCode_TERMINAL_NOTFOUND = 2,
  ResponseStatus_StatusCode_BASE_STATION_NOTFOUND = 3,
  ResponseStatus_StatusCode_NETWORK_FAILURE = 4,
  ResponseStatus_StatusCode_ResponseStatus_StatusCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ResponseStatus_StatusCode_ResponseStatus_StatusCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ResponseStatus_StatusCode_IsValid(int value);
const ResponseStatus_StatusCode ResponseStatus_StatusCode_StatusCode_MIN = ResponseStatus_StatusCode_OK;
const ResponseStatus_StatusCode ResponseStatus_StatusCode_StatusCode_MAX = ResponseStatus_StatusCode_NETWORK_FAILURE;
const int ResponseStatus_StatusCode_StatusCode_ARRAYSIZE = ResponseStatus_StatusCode_StatusCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResponseStatus_StatusCode_descriptor();
inline const ::std::string& ResponseStatus_StatusCode_Name(ResponseStatus_StatusCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResponseStatus_StatusCode_descriptor(), value);
}
inline bool ResponseStatus_StatusCode_Parse(
    const ::std::string& name, ResponseStatus_StatusCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResponseStatus_StatusCode>(
    ResponseStatus_StatusCode_descriptor(), name, value);
}
enum UpdateEvent_Event {
  UpdateEvent_Event_NO_EVENT = 0,
  UpdateEvent_Event_TERMINAL_LIST_UPDATE = 1,
  UpdateEvent_Event_BASE_STATION_LIST_UPDATE = 2,
  UpdateEvent_Event_CONFIG_UPDATE = 3,
  UpdateEvent_Event_UpdateEvent_Event_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UpdateEvent_Event_UpdateEvent_Event_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UpdateEvent_Event_IsValid(int value);
const UpdateEvent_Event UpdateEvent_Event_Event_MIN = UpdateEvent_Event_NO_EVENT;
const UpdateEvent_Event UpdateEvent_Event_Event_MAX = UpdateEvent_Event_CONFIG_UPDATE;
const int UpdateEvent_Event_Event_ARRAYSIZE = UpdateEvent_Event_Event_MAX + 1;

const ::google::protobuf::EnumDescriptor* UpdateEvent_Event_descriptor();
inline const ::std::string& UpdateEvent_Event_Name(UpdateEvent_Event value) {
  return ::google::protobuf::internal::NameOfEnum(
    UpdateEvent_Event_descriptor(), value);
}
inline bool UpdateEvent_Event_Parse(
    const ::std::string& name, UpdateEvent_Event* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateEvent_Event>(
    UpdateEvent_Event_descriptor(), name, value);
}
enum TerminalPropertyRequest_RequestType {
  TerminalPropertyRequest_RequestType_UPDATE = 0,
  TerminalPropertyRequest_RequestType_GET = 1,
  TerminalPropertyRequest_RequestType_TerminalPropertyRequest_RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TerminalPropertyRequest_RequestType_TerminalPropertyRequest_RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TerminalPropertyRequest_RequestType_IsValid(int value);
const TerminalPropertyRequest_RequestType TerminalPropertyRequest_RequestType_RequestType_MIN = TerminalPropertyRequest_RequestType_UPDATE;
const TerminalPropertyRequest_RequestType TerminalPropertyRequest_RequestType_RequestType_MAX = TerminalPropertyRequest_RequestType_GET;
const int TerminalPropertyRequest_RequestType_RequestType_ARRAYSIZE = TerminalPropertyRequest_RequestType_RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TerminalPropertyRequest_RequestType_descriptor();
inline const ::std::string& TerminalPropertyRequest_RequestType_Name(TerminalPropertyRequest_RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TerminalPropertyRequest_RequestType_descriptor(), value);
}
inline bool TerminalPropertyRequest_RequestType_Parse(
    const ::std::string& name, TerminalPropertyRequest_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TerminalPropertyRequest_RequestType>(
    TerminalPropertyRequest_RequestType_descriptor(), name, value);
}
enum TerminalActionRequest_RequestType {
  TerminalActionRequest_RequestType_RESTART_HOST = 0,
  TerminalActionRequest_RequestType_RESTART_BIN = 1,
  TerminalActionRequest_RequestType_UPDATE_BIN = 2,
  TerminalActionRequest_RequestType_START_CALIBRATION = 3,
  TerminalActionRequest_RequestType_STOP_CALIBRATION = 4,
  TerminalActionRequest_RequestType_RUNTIME_CHECK = 5,
  TerminalActionRequest_RequestType_TerminalActionRequest_RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TerminalActionRequest_RequestType_TerminalActionRequest_RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TerminalActionRequest_RequestType_IsValid(int value);
const TerminalActionRequest_RequestType TerminalActionRequest_RequestType_RequestType_MIN = TerminalActionRequest_RequestType_RESTART_HOST;
const TerminalActionRequest_RequestType TerminalActionRequest_RequestType_RequestType_MAX = TerminalActionRequest_RequestType_RUNTIME_CHECK;
const int TerminalActionRequest_RequestType_RequestType_ARRAYSIZE = TerminalActionRequest_RequestType_RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TerminalActionRequest_RequestType_descriptor();
inline const ::std::string& TerminalActionRequest_RequestType_Name(TerminalActionRequest_RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TerminalActionRequest_RequestType_descriptor(), value);
}
inline bool TerminalActionRequest_RequestType_Parse(
    const ::std::string& name, TerminalActionRequest_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TerminalActionRequest_RequestType>(
    TerminalActionRequest_RequestType_descriptor(), name, value);
}
enum BaseStationPropertyRequest_RequestType {
  BaseStationPropertyRequest_RequestType_UPDATE_ACTIVE = 0,
  BaseStationPropertyRequest_RequestType_GET_ACTIVE = 1,
  BaseStationPropertyRequest_RequestType_GET_ALL = 2,
  BaseStationPropertyRequest_RequestType_REMOVE = 3,
  BaseStationPropertyRequest_RequestType_BaseStationPropertyRequest_RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BaseStationPropertyRequest_RequestType_BaseStationPropertyRequest_RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BaseStationPropertyRequest_RequestType_IsValid(int value);
const BaseStationPropertyRequest_RequestType BaseStationPropertyRequest_RequestType_RequestType_MIN = BaseStationPropertyRequest_RequestType_UPDATE_ACTIVE;
const BaseStationPropertyRequest_RequestType BaseStationPropertyRequest_RequestType_RequestType_MAX = BaseStationPropertyRequest_RequestType_REMOVE;
const int BaseStationPropertyRequest_RequestType_RequestType_ARRAYSIZE = BaseStationPropertyRequest_RequestType_RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BaseStationPropertyRequest_RequestType_descriptor();
inline const ::std::string& BaseStationPropertyRequest_RequestType_Name(BaseStationPropertyRequest_RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BaseStationPropertyRequest_RequestType_descriptor(), value);
}
inline bool BaseStationPropertyRequest_RequestType_Parse(
    const ::std::string& name, BaseStationPropertyRequest_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BaseStationPropertyRequest_RequestType>(
    BaseStationPropertyRequest_RequestType_descriptor(), name, value);
}
enum ControllerBroadcast_ControllerType {
  ControllerBroadcast_ControllerType_MULTI = 0,
  ControllerBroadcast_ControllerType_SINGLE = 1,
  ControllerBroadcast_ControllerType_ControllerBroadcast_ControllerType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ControllerBroadcast_ControllerType_ControllerBroadcast_ControllerType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ControllerBroadcast_ControllerType_IsValid(int value);
const ControllerBroadcast_ControllerType ControllerBroadcast_ControllerType_ControllerType_MIN = ControllerBroadcast_ControllerType_MULTI;
const ControllerBroadcast_ControllerType ControllerBroadcast_ControllerType_ControllerType_MAX = ControllerBroadcast_ControllerType_SINGLE;
const int ControllerBroadcast_ControllerType_ControllerType_ARRAYSIZE = ControllerBroadcast_ControllerType_ControllerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ControllerBroadcast_ControllerType_descriptor();
inline const ::std::string& ControllerBroadcast_ControllerType_Name(ControllerBroadcast_ControllerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ControllerBroadcast_ControllerType_descriptor(), value);
}
inline bool ControllerBroadcast_ControllerType_Parse(
    const ::std::string& name, ControllerBroadcast_ControllerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ControllerBroadcast_ControllerType>(
    ControllerBroadcast_ControllerType_descriptor(), name, value);
}
enum BroadcastResponse_ResponseType {
  BroadcastResponse_ResponseType_TERMINAL_TYPE = 0,
  BroadcastResponse_ResponseType_MANAGER_TYPE = 1,
  BroadcastResponse_ResponseType_BroadcastResponse_ResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BroadcastResponse_ResponseType_BroadcastResponse_ResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BroadcastResponse_ResponseType_IsValid(int value);
const BroadcastResponse_ResponseType BroadcastResponse_ResponseType_ResponseType_MIN = BroadcastResponse_ResponseType_TERMINAL_TYPE;
const BroadcastResponse_ResponseType BroadcastResponse_ResponseType_ResponseType_MAX = BroadcastResponse_ResponseType_MANAGER_TYPE;
const int BroadcastResponse_ResponseType_ResponseType_ARRAYSIZE = BroadcastResponse_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BroadcastResponse_ResponseType_descriptor();
inline const ::std::string& BroadcastResponse_ResponseType_Name(BroadcastResponse_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BroadcastResponse_ResponseType_descriptor(), value);
}
inline bool BroadcastResponse_ResponseType_Parse(
    const ::std::string& name, BroadcastResponse_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BroadcastResponse_ResponseType>(
    BroadcastResponse_ResponseType_descriptor(), name, value);
}
// ===================================================================

class PointXYZ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.PointXYZ) */ {
 public:
  PointXYZ();
  virtual ~PointXYZ();

  PointXYZ(const PointXYZ& from);

  inline PointXYZ& operator=(const PointXYZ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PointXYZ(PointXYZ&& from) noexcept
    : PointXYZ() {
    *this = ::std::move(from);
  }

  inline PointXYZ& operator=(PointXYZ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PointXYZ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PointXYZ* internal_default_instance() {
    return reinterpret_cast<const PointXYZ*>(
               &_PointXYZ_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PointXYZ* other);
  friend void swap(PointXYZ& a, PointXYZ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PointXYZ* New() const PROTOBUF_FINAL { return New(NULL); }

  PointXYZ* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PointXYZ& from);
  void MergeFrom(const PointXYZ& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PointXYZ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:LTMessage.PointXYZ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsPointXYZImpl();
};
// -------------------------------------------------------------------

class Location : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Location(Location&& from) noexcept
    : Location() {
    *this = ::std::move(from);
  }

  inline Location& operator=(Location&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Location& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
               &_Location_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Location* other);
  friend void swap(Location& a, Location& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Location* New() const PROTOBUF_FINAL { return New(NULL); }

  Location* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Location_LocationType LocationType;
  static const LocationType LOC_SENSOR_RAW =
    Location_LocationType_LOC_SENSOR_RAW;
  static const LocationType LOC_SENSOR_FILTERED =
    Location_LocationType_LOC_SENSOR_FILTERED;
  static const LocationType LOC_ROBOT_FILTERED =
    Location_LocationType_LOC_ROBOT_FILTERED;
  static const LocationType LOC_SENSOR_FILTERED_NOIMU =
    Location_LocationType_LOC_SENSOR_FILTERED_NOIMU;
  static const LocationType LOC_ROBOT_FILTERED_NOIMU =
    Location_LocationType_LOC_ROBOT_FILTERED_NOIMU;
  static const LocationType LOC_SENSOR_RAW_UNREGISTERED_BS =
    Location_LocationType_LOC_SENSOR_RAW_UNREGISTERED_BS;
  static const LocationType LOC_SENSOR_FILTERED0 =
    Location_LocationType_LOC_SENSOR_FILTERED0;
  static const LocationType LOC_SENSOR_FILTERED1 =
    Location_LocationType_LOC_SENSOR_FILTERED1;
  static inline bool LocationType_IsValid(int value) {
    return Location_LocationType_IsValid(value);
  }
  static const LocationType LocationType_MIN =
    Location_LocationType_LocationType_MIN;
  static const LocationType LocationType_MAX =
    Location_LocationType_LocationType_MAX;
  static const int LocationType_ARRAYSIZE =
    Location_LocationType_LocationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LocationType_descriptor() {
    return Location_LocationType_descriptor();
  }
  static inline const ::std::string& LocationType_Name(LocationType value) {
    return Location_LocationType_Name(value);
  }
  static inline bool LocationType_Parse(const ::std::string& name,
      LocationType* value) {
    return Location_LocationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string terminal_id = 10;
  void clear_terminal_id();
  static const int kTerminalIdFieldNumber = 10;
  const ::std::string& terminal_id() const;
  void set_terminal_id(const ::std::string& value);
  #if LANG_CXX11
  void set_terminal_id(::std::string&& value);
  #endif
  void set_terminal_id(const char* value);
  void set_terminal_id(const char* value, size_t size);
  ::std::string* mutable_terminal_id();
  ::std::string* release_terminal_id();
  void set_allocated_terminal_id(::std::string* terminal_id);

  // .LTMessage.PointXYZ coordinates = 2;
  bool has_coordinates() const;
  void clear_coordinates();
  static const int kCoordinatesFieldNumber = 2;
  const ::LTMessage::PointXYZ& coordinates() const;
  ::LTMessage::PointXYZ* release_coordinates();
  ::LTMessage::PointXYZ* mutable_coordinates();
  void set_allocated_coordinates(::LTMessage::PointXYZ* coordinates);

  // double heading = 3;
  void clear_heading();
  static const int kHeadingFieldNumber = 3;
  double heading() const;
  void set_heading(double value);

  // double gamma = 4;
  void clear_gamma();
  static const int kGammaFieldNumber = 4;
  double gamma() const;
  void set_gamma(double value);

  // .LTMessage.Location.LocationType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::LTMessage::Location_LocationType type() const;
  void set_type(::LTMessage::Location_LocationType value);

  // int32 bs_index = 7;
  void clear_bs_index();
  static const int kBsIndexFieldNumber = 7;
  ::google::protobuf::int32 bs_index() const;
  void set_bs_index(::google::protobuf::int32 value);

  // double theta = 5;
  void clear_theta();
  static const int kThetaFieldNumber = 5;
  double theta() const;
  void set_theta(double value);

  // double ts = 6;
  void clear_ts();
  static const int kTsFieldNumber = 6;
  double ts() const;
  void set_ts(double value);

  // int32 sensor_id = 8;
  void clear_sensor_id();
  static const int kSensorIdFieldNumber = 8;
  ::google::protobuf::int32 sensor_id() const;
  void set_sensor_id(::google::protobuf::int32 value);

  // int32 sensor_channel_id = 9;
  void clear_sensor_channel_id();
  static const int kSensorChannelIdFieldNumber = 9;
  ::google::protobuf::int32 sensor_channel_id() const;
  void set_sensor_channel_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LTMessage.Location)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr terminal_id_;
  ::LTMessage::PointXYZ* coordinates_;
  double heading_;
  double gamma_;
  int type_;
  ::google::protobuf::int32 bs_index_;
  double theta_;
  double ts_;
  ::google::protobuf::int32 sensor_id_;
  ::google::protobuf::int32 sensor_channel_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsLocationImpl();
};
// -------------------------------------------------------------------

class ResponseStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.ResponseStatus) */ {
 public:
  ResponseStatus();
  virtual ~ResponseStatus();

  ResponseStatus(const ResponseStatus& from);

  inline ResponseStatus& operator=(const ResponseStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseStatus(ResponseStatus&& from) noexcept
    : ResponseStatus() {
    *this = ::std::move(from);
  }

  inline ResponseStatus& operator=(ResponseStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseStatus* internal_default_instance() {
    return reinterpret_cast<const ResponseStatus*>(
               &_ResponseStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ResponseStatus* other);
  friend void swap(ResponseStatus& a, ResponseStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseStatus& from);
  void MergeFrom(const ResponseStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ResponseStatus_StatusCode StatusCode;
  static const StatusCode OK =
    ResponseStatus_StatusCode_OK;
  static const StatusCode FAIL =
    ResponseStatus_StatusCode_FAIL;
  static const StatusCode TERMINAL_NOTFOUND =
    ResponseStatus_StatusCode_TERMINAL_NOTFOUND;
  static const StatusCode BASE_STATION_NOTFOUND =
    ResponseStatus_StatusCode_BASE_STATION_NOTFOUND;
  static const StatusCode NETWORK_FAILURE =
    ResponseStatus_StatusCode_NETWORK_FAILURE;
  static inline bool StatusCode_IsValid(int value) {
    return ResponseStatus_StatusCode_IsValid(value);
  }
  static const StatusCode StatusCode_MIN =
    ResponseStatus_StatusCode_StatusCode_MIN;
  static const StatusCode StatusCode_MAX =
    ResponseStatus_StatusCode_StatusCode_MAX;
  static const int StatusCode_ARRAYSIZE =
    ResponseStatus_StatusCode_StatusCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StatusCode_descriptor() {
    return ResponseStatus_StatusCode_descriptor();
  }
  static inline const ::std::string& StatusCode_Name(StatusCode value) {
    return ResponseStatus_StatusCode_Name(value);
  }
  static inline bool StatusCode_Parse(const ::std::string& name,
      StatusCode* value) {
    return ResponseStatus_StatusCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string detail = 2;
  void clear_detail();
  static const int kDetailFieldNumber = 2;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_detail(::std::string&& value);
  #endif
  void set_detail(const char* value);
  void set_detail(const char* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // .LTMessage.ResponseStatus.StatusCode code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::LTMessage::ResponseStatus_StatusCode code() const;
  void set_code(::LTMessage::ResponseStatus_StatusCode value);

  // @@protoc_insertion_point(class_scope:LTMessage.ResponseStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  int code_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsResponseStatusImpl();
};
// -------------------------------------------------------------------

class UpdateEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.UpdateEvent) */ {
 public:
  UpdateEvent();
  virtual ~UpdateEvent();

  UpdateEvent(const UpdateEvent& from);

  inline UpdateEvent& operator=(const UpdateEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateEvent(UpdateEvent&& from) noexcept
    : UpdateEvent() {
    *this = ::std::move(from);
  }

  inline UpdateEvent& operator=(UpdateEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateEvent* internal_default_instance() {
    return reinterpret_cast<const UpdateEvent*>(
               &_UpdateEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(UpdateEvent* other);
  friend void swap(UpdateEvent& a, UpdateEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateEvent& from);
  void MergeFrom(const UpdateEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UpdateEvent_Event Event;
  static const Event NO_EVENT =
    UpdateEvent_Event_NO_EVENT;
  static const Event TERMINAL_LIST_UPDATE =
    UpdateEvent_Event_TERMINAL_LIST_UPDATE;
  static const Event BASE_STATION_LIST_UPDATE =
    UpdateEvent_Event_BASE_STATION_LIST_UPDATE;
  static const Event CONFIG_UPDATE =
    UpdateEvent_Event_CONFIG_UPDATE;
  static inline bool Event_IsValid(int value) {
    return UpdateEvent_Event_IsValid(value);
  }
  static const Event Event_MIN =
    UpdateEvent_Event_Event_MIN;
  static const Event Event_MAX =
    UpdateEvent_Event_Event_MAX;
  static const int Event_ARRAYSIZE =
    UpdateEvent_Event_Event_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Event_descriptor() {
    return UpdateEvent_Event_descriptor();
  }
  static inline const ::std::string& Event_Name(Event value) {
    return UpdateEvent_Event_Name(value);
  }
  static inline bool Event_Parse(const ::std::string& name,
      Event* value) {
    return UpdateEvent_Event_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string detail = 2;
  void clear_detail();
  static const int kDetailFieldNumber = 2;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_detail(::std::string&& value);
  #endif
  void set_detail(const char* value);
  void set_detail(const char* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // .LTMessage.UpdateEvent.Event event = 1;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::LTMessage::UpdateEvent_Event event() const;
  void set_event(::LTMessage::UpdateEvent_Event value);

  // @@protoc_insertion_point(class_scope:LTMessage.UpdateEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  int event_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsUpdateEventImpl();
};
// -------------------------------------------------------------------

class TerminalExceptStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.TerminalExceptStatus) */ {
 public:
  TerminalExceptStatus();
  virtual ~TerminalExceptStatus();

  TerminalExceptStatus(const TerminalExceptStatus& from);

  inline TerminalExceptStatus& operator=(const TerminalExceptStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalExceptStatus(TerminalExceptStatus&& from) noexcept
    : TerminalExceptStatus() {
    *this = ::std::move(from);
  }

  inline TerminalExceptStatus& operator=(TerminalExceptStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalExceptStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalExceptStatus* internal_default_instance() {
    return reinterpret_cast<const TerminalExceptStatus*>(
               &_TerminalExceptStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TerminalExceptStatus* other);
  friend void swap(TerminalExceptStatus& a, TerminalExceptStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalExceptStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalExceptStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalExceptStatus& from);
  void MergeFrom(const TerminalExceptStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalExceptStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string except_detail = 6;
  int except_detail_size() const;
  void clear_except_detail();
  static const int kExceptDetailFieldNumber = 6;
  const ::std::string& except_detail(int index) const;
  ::std::string* mutable_except_detail(int index);
  void set_except_detail(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_except_detail(int index, ::std::string&& value);
  #endif
  void set_except_detail(int index, const char* value);
  void set_except_detail(int index, const char* value, size_t size);
  ::std::string* add_except_detail();
  void add_except_detail(const ::std::string& value);
  #if LANG_CXX11
  void add_except_detail(::std::string&& value);
  #endif
  void add_except_detail(const char* value);
  void add_except_detail(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& except_detail() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_except_detail();

  // string mac_addr = 1;
  void clear_mac_addr();
  static const int kMacAddrFieldNumber = 1;
  const ::std::string& mac_addr() const;
  void set_mac_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_mac_addr(::std::string&& value);
  #endif
  void set_mac_addr(const char* value);
  void set_mac_addr(const char* value, size_t size);
  ::std::string* mutable_mac_addr();
  ::std::string* release_mac_addr();
  void set_allocated_mac_addr(::std::string* mac_addr);

  // string data_hub_check_info = 7;
  void clear_data_hub_check_info();
  static const int kDataHubCheckInfoFieldNumber = 7;
  const ::std::string& data_hub_check_info() const;
  void set_data_hub_check_info(const ::std::string& value);
  #if LANG_CXX11
  void set_data_hub_check_info(::std::string&& value);
  #endif
  void set_data_hub_check_info(const char* value);
  void set_data_hub_check_info(const char* value, size_t size);
  ::std::string* mutable_data_hub_check_info();
  ::std::string* release_data_hub_check_info();
  void set_allocated_data_hub_check_info(::std::string* data_hub_check_info);

  // string loc_engine_check_info = 8;
  void clear_loc_engine_check_info();
  static const int kLocEngineCheckInfoFieldNumber = 8;
  const ::std::string& loc_engine_check_info() const;
  void set_loc_engine_check_info(const ::std::string& value);
  #if LANG_CXX11
  void set_loc_engine_check_info(::std::string&& value);
  #endif
  void set_loc_engine_check_info(const char* value);
  void set_loc_engine_check_info(const char* value, size_t size);
  ::std::string* mutable_loc_engine_check_info();
  ::std::string* release_loc_engine_check_info();
  void set_allocated_loc_engine_check_info(::std::string* loc_engine_check_info);

  // bool data_hub_is_dead = 2;
  void clear_data_hub_is_dead();
  static const int kDataHubIsDeadFieldNumber = 2;
  bool data_hub_is_dead() const;
  void set_data_hub_is_dead(bool value);

  // bool loc_engine_is_dead = 3;
  void clear_loc_engine_is_dead();
  static const int kLocEngineIsDeadFieldNumber = 3;
  bool loc_engine_is_dead() const;
  void set_loc_engine_is_dead(bool value);

  // bool config_error = 4;
  void clear_config_error();
  static const int kConfigErrorFieldNumber = 4;
  bool config_error() const;
  void set_config_error(bool value);

  // bool sensor_change = 5;
  void clear_sensor_change();
  static const int kSensorChangeFieldNumber = 5;
  bool sensor_change() const;
  void set_sensor_change(bool value);

  // @@protoc_insertion_point(class_scope:LTMessage.TerminalExceptStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> except_detail_;
  ::google::protobuf::internal::ArenaStringPtr mac_addr_;
  ::google::protobuf::internal::ArenaStringPtr data_hub_check_info_;
  ::google::protobuf::internal::ArenaStringPtr loc_engine_check_info_;
  bool data_hub_is_dead_;
  bool loc_engine_is_dead_;
  bool config_error_;
  bool sensor_change_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsTerminalExceptStatusImpl();
};
// -------------------------------------------------------------------

class BasesExceptStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.BasesExceptStatus) */ {
 public:
  BasesExceptStatus();
  virtual ~BasesExceptStatus();

  BasesExceptStatus(const BasesExceptStatus& from);

  inline BasesExceptStatus& operator=(const BasesExceptStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BasesExceptStatus(BasesExceptStatus&& from) noexcept
    : BasesExceptStatus() {
    *this = ::std::move(from);
  }

  inline BasesExceptStatus& operator=(BasesExceptStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BasesExceptStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BasesExceptStatus* internal_default_instance() {
    return reinterpret_cast<const BasesExceptStatus*>(
               &_BasesExceptStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(BasesExceptStatus* other);
  friend void swap(BasesExceptStatus& a, BasesExceptStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BasesExceptStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  BasesExceptStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BasesExceptStatus& from);
  void MergeFrom(const BasesExceptStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BasesExceptStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string except_detail = 2;
  int except_detail_size() const;
  void clear_except_detail();
  static const int kExceptDetailFieldNumber = 2;
  const ::std::string& except_detail(int index) const;
  ::std::string* mutable_except_detail(int index);
  void set_except_detail(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_except_detail(int index, ::std::string&& value);
  #endif
  void set_except_detail(int index, const char* value);
  void set_except_detail(int index, const char* value, size_t size);
  ::std::string* add_except_detail();
  void add_except_detail(const ::std::string& value);
  #if LANG_CXX11
  void add_except_detail(::std::string&& value);
  #endif
  void add_except_detail(const char* value);
  void add_except_detail(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& except_detail() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_except_detail();

  // string chip_id = 1;
  void clear_chip_id();
  static const int kChipIdFieldNumber = 1;
  const ::std::string& chip_id() const;
  void set_chip_id(const ::std::string& value);
  #if LANG_CXX11
  void set_chip_id(::std::string&& value);
  #endif
  void set_chip_id(const char* value);
  void set_chip_id(const char* value, size_t size);
  ::std::string* mutable_chip_id();
  ::std::string* release_chip_id();
  void set_allocated_chip_id(::std::string* chip_id);

  // @@protoc_insertion_point(class_scope:LTMessage.BasesExceptStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> except_detail_;
  ::google::protobuf::internal::ArenaStringPtr chip_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsBasesExceptStatusImpl();
};
// -------------------------------------------------------------------

class TerminalProperty_Sensor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.TerminalProperty.Sensor) */ {
 public:
  TerminalProperty_Sensor();
  virtual ~TerminalProperty_Sensor();

  TerminalProperty_Sensor(const TerminalProperty_Sensor& from);

  inline TerminalProperty_Sensor& operator=(const TerminalProperty_Sensor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalProperty_Sensor(TerminalProperty_Sensor&& from) noexcept
    : TerminalProperty_Sensor() {
    *this = ::std::move(from);
  }

  inline TerminalProperty_Sensor& operator=(TerminalProperty_Sensor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalProperty_Sensor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalProperty_Sensor* internal_default_instance() {
    return reinterpret_cast<const TerminalProperty_Sensor*>(
               &_TerminalProperty_Sensor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TerminalProperty_Sensor* other);
  friend void swap(TerminalProperty_Sensor& a, TerminalProperty_Sensor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalProperty_Sensor* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalProperty_Sensor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalProperty_Sensor& from);
  void MergeFrom(const TerminalProperty_Sensor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalProperty_Sensor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LTMessage.PointXYZ coordinates = 4;
  bool has_coordinates() const;
  void clear_coordinates();
  static const int kCoordinatesFieldNumber = 4;
  const ::LTMessage::PointXYZ& coordinates() const;
  ::LTMessage::PointXYZ* release_coordinates();
  ::LTMessage::PointXYZ* mutable_coordinates();
  void set_allocated_coordinates(::LTMessage::PointXYZ* coordinates);

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // int32 active = 2;
  void clear_active();
  static const int kActiveFieldNumber = 2;
  ::google::protobuf::int32 active() const;
  void set_active(::google::protobuf::int32 value);

  // double height = 3;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  double height() const;
  void set_height(double value);

  // @@protoc_insertion_point(class_scope:LTMessage.TerminalProperty.Sensor)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LTMessage::PointXYZ* coordinates_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 active_;
  double height_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsTerminalProperty_SensorImpl();
};
// -------------------------------------------------------------------

class TerminalProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.TerminalProperty) */ {
 public:
  TerminalProperty();
  virtual ~TerminalProperty();

  TerminalProperty(const TerminalProperty& from);

  inline TerminalProperty& operator=(const TerminalProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalProperty(TerminalProperty&& from) noexcept
    : TerminalProperty() {
    *this = ::std::move(from);
  }

  inline TerminalProperty& operator=(TerminalProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalProperty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalProperty* internal_default_instance() {
    return reinterpret_cast<const TerminalProperty*>(
               &_TerminalProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(TerminalProperty* other);
  friend void swap(TerminalProperty& a, TerminalProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalProperty& from);
  void MergeFrom(const TerminalProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalProperty_Sensor Sensor;

  // accessors -------------------------------------------------------

  // repeated .LTMessage.TerminalProperty.Sensor sensor_list = 4;
  int sensor_list_size() const;
  void clear_sensor_list();
  static const int kSensorListFieldNumber = 4;
  const ::LTMessage::TerminalProperty_Sensor& sensor_list(int index) const;
  ::LTMessage::TerminalProperty_Sensor* mutable_sensor_list(int index);
  ::LTMessage::TerminalProperty_Sensor* add_sensor_list();
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty_Sensor >*
      mutable_sensor_list();
  const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty_Sensor >&
      sensor_list() const;

  // repeated string report_ip_addr = 5;
  int report_ip_addr_size() const;
  void clear_report_ip_addr();
  static const int kReportIpAddrFieldNumber = 5;
  const ::std::string& report_ip_addr(int index) const;
  ::std::string* mutable_report_ip_addr(int index);
  void set_report_ip_addr(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_report_ip_addr(int index, ::std::string&& value);
  #endif
  void set_report_ip_addr(int index, const char* value);
  void set_report_ip_addr(int index, const char* value, size_t size);
  ::std::string* add_report_ip_addr();
  void add_report_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void add_report_ip_addr(::std::string&& value);
  #endif
  void add_report_ip_addr(const char* value);
  void add_report_ip_addr(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& report_ip_addr() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_report_ip_addr();

  // repeated int32 report_tcp_port = 6;
  int report_tcp_port_size() const;
  void clear_report_tcp_port();
  static const int kReportTcpPortFieldNumber = 6;
  ::google::protobuf::int32 report_tcp_port(int index) const;
  void set_report_tcp_port(int index, ::google::protobuf::int32 value);
  void add_report_tcp_port(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      report_tcp_port() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_report_tcp_port();

  // string host_name = 1;
  void clear_host_name();
  static const int kHostNameFieldNumber = 1;
  const ::std::string& host_name() const;
  void set_host_name(const ::std::string& value);
  #if LANG_CXX11
  void set_host_name(::std::string&& value);
  #endif
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  ::std::string* mutable_host_name();
  ::std::string* release_host_name();
  void set_allocated_host_name(::std::string* host_name);

  // string mac_addr = 2;
  void clear_mac_addr();
  static const int kMacAddrFieldNumber = 2;
  const ::std::string& mac_addr() const;
  void set_mac_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_mac_addr(::std::string&& value);
  #endif
  void set_mac_addr(const char* value);
  void set_mac_addr(const char* value, size_t size);
  ::std::string* mutable_mac_addr();
  ::std::string* release_mac_addr();
  void set_allocated_mac_addr(::std::string* mac_addr);

  // string ip_addr = 3;
  void clear_ip_addr();
  static const int kIpAddrFieldNumber = 3;
  const ::std::string& ip_addr() const;
  void set_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_addr(::std::string&& value);
  #endif
  void set_ip_addr(const char* value);
  void set_ip_addr(const char* value, size_t size);
  ::std::string* mutable_ip_addr();
  ::std::string* release_ip_addr();
  void set_allocated_ip_addr(::std::string* ip_addr);

  // @@protoc_insertion_point(class_scope:LTMessage.TerminalProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty_Sensor > sensor_list_;
  ::google::protobuf::RepeatedPtrField< ::std::string> report_ip_addr_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > report_tcp_port_;
  mutable int _report_tcp_port_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr host_name_;
  ::google::protobuf::internal::ArenaStringPtr mac_addr_;
  ::google::protobuf::internal::ArenaStringPtr ip_addr_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsTerminalPropertyImpl();
};
// -------------------------------------------------------------------

class BaseStationProperty_Pose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.BaseStationProperty.Pose) */ {
 public:
  BaseStationProperty_Pose();
  virtual ~BaseStationProperty_Pose();

  BaseStationProperty_Pose(const BaseStationProperty_Pose& from);

  inline BaseStationProperty_Pose& operator=(const BaseStationProperty_Pose& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BaseStationProperty_Pose(BaseStationProperty_Pose&& from) noexcept
    : BaseStationProperty_Pose() {
    *this = ::std::move(from);
  }

  inline BaseStationProperty_Pose& operator=(BaseStationProperty_Pose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseStationProperty_Pose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BaseStationProperty_Pose* internal_default_instance() {
    return reinterpret_cast<const BaseStationProperty_Pose*>(
               &_BaseStationProperty_Pose_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(BaseStationProperty_Pose* other);
  friend void swap(BaseStationProperty_Pose& a, BaseStationProperty_Pose& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BaseStationProperty_Pose* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseStationProperty_Pose* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseStationProperty_Pose& from);
  void MergeFrom(const BaseStationProperty_Pose& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseStationProperty_Pose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double pitch = 1;
  void clear_pitch();
  static const int kPitchFieldNumber = 1;
  double pitch() const;
  void set_pitch(double value);

  // double roll = 2;
  void clear_roll();
  static const int kRollFieldNumber = 2;
  double roll() const;
  void set_roll(double value);

  // double yaw = 3;
  void clear_yaw();
  static const int kYawFieldNumber = 3;
  double yaw() const;
  void set_yaw(double value);

  // @@protoc_insertion_point(class_scope:LTMessage.BaseStationProperty.Pose)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double pitch_;
  double roll_;
  double yaw_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsBaseStationProperty_PoseImpl();
};
// -------------------------------------------------------------------

class BaseStationProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.BaseStationProperty) */ {
 public:
  BaseStationProperty();
  virtual ~BaseStationProperty();

  BaseStationProperty(const BaseStationProperty& from);

  inline BaseStationProperty& operator=(const BaseStationProperty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BaseStationProperty(BaseStationProperty&& from) noexcept
    : BaseStationProperty() {
    *this = ::std::move(from);
  }

  inline BaseStationProperty& operator=(BaseStationProperty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseStationProperty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BaseStationProperty* internal_default_instance() {
    return reinterpret_cast<const BaseStationProperty*>(
               &_BaseStationProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(BaseStationProperty* other);
  friend void swap(BaseStationProperty& a, BaseStationProperty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BaseStationProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseStationProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseStationProperty& from);
  void MergeFrom(const BaseStationProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseStationProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BaseStationProperty_Pose Pose;

  // accessors -------------------------------------------------------

  // string chip_id = 1;
  void clear_chip_id();
  static const int kChipIdFieldNumber = 1;
  const ::std::string& chip_id() const;
  void set_chip_id(const ::std::string& value);
  #if LANG_CXX11
  void set_chip_id(::std::string&& value);
  #endif
  void set_chip_id(const char* value);
  void set_chip_id(const char* value, size_t size);
  ::std::string* mutable_chip_id();
  ::std::string* release_chip_id();
  void set_allocated_chip_id(::std::string* chip_id);

  // string host_name = 3;
  void clear_host_name();
  static const int kHostNameFieldNumber = 3;
  const ::std::string& host_name() const;
  void set_host_name(const ::std::string& value);
  #if LANG_CXX11
  void set_host_name(::std::string&& value);
  #endif
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  ::std::string* mutable_host_name();
  ::std::string* release_host_name();
  void set_allocated_host_name(::std::string* host_name);

  // .LTMessage.PointXYZ coordinates = 7;
  bool has_coordinates() const;
  void clear_coordinates();
  static const int kCoordinatesFieldNumber = 7;
  const ::LTMessage::PointXYZ& coordinates() const;
  ::LTMessage::PointXYZ* release_coordinates();
  ::LTMessage::PointXYZ* mutable_coordinates();
  void set_allocated_coordinates(::LTMessage::PointXYZ* coordinates);

  // .LTMessage.BaseStationProperty.Pose orientation = 8;
  bool has_orientation() const;
  void clear_orientation();
  static const int kOrientationFieldNumber = 8;
  const ::LTMessage::BaseStationProperty_Pose& orientation() const;
  ::LTMessage::BaseStationProperty_Pose* release_orientation();
  ::LTMessage::BaseStationProperty_Pose* mutable_orientation();
  void set_allocated_orientation(::LTMessage::BaseStationProperty_Pose* orientation);

  // int32 bs_id = 2;
  void clear_bs_id();
  static const int kBsIdFieldNumber = 2;
  ::google::protobuf::int32 bs_id() const;
  void set_bs_id(::google::protobuf::int32 value);

  // int32 ingroup_addr = 4;
  void clear_ingroup_addr();
  static const int kIngroupAddrFieldNumber = 4;
  ::google::protobuf::int32 ingroup_addr() const;
  void set_ingroup_addr(::google::protobuf::int32 value);

  // double start_angle = 6;
  void clear_start_angle();
  static const int kStartAngleFieldNumber = 6;
  double start_angle() const;
  void set_start_angle(double value);

  // int32 frequency = 5;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 5;
  ::google::protobuf::int32 frequency() const;
  void set_frequency(::google::protobuf::int32 value);

  // int32 led_status = 9;
  void clear_led_status();
  static const int kLedStatusFieldNumber = 9;
  ::google::protobuf::int32 led_status() const;
  void set_led_status(::google::protobuf::int32 value);

  // double motor_speed = 10;
  void clear_motor_speed();
  static const int kMotorSpeedFieldNumber = 10;
  double motor_speed() const;
  void set_motor_speed(double value);

  // @@protoc_insertion_point(class_scope:LTMessage.BaseStationProperty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chip_id_;
  ::google::protobuf::internal::ArenaStringPtr host_name_;
  ::LTMessage::PointXYZ* coordinates_;
  ::LTMessage::BaseStationProperty_Pose* orientation_;
  ::google::protobuf::int32 bs_id_;
  ::google::protobuf::int32 ingroup_addr_;
  double start_angle_;
  ::google::protobuf::int32 frequency_;
  ::google::protobuf::int32 led_status_;
  double motor_speed_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsBaseStationPropertyImpl();
};
// -------------------------------------------------------------------

class TerminalPropertyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.TerminalPropertyRequest) */ {
 public:
  TerminalPropertyRequest();
  virtual ~TerminalPropertyRequest();

  TerminalPropertyRequest(const TerminalPropertyRequest& from);

  inline TerminalPropertyRequest& operator=(const TerminalPropertyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalPropertyRequest(TerminalPropertyRequest&& from) noexcept
    : TerminalPropertyRequest() {
    *this = ::std::move(from);
  }

  inline TerminalPropertyRequest& operator=(TerminalPropertyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalPropertyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalPropertyRequest* internal_default_instance() {
    return reinterpret_cast<const TerminalPropertyRequest*>(
               &_TerminalPropertyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TerminalPropertyRequest* other);
  friend void swap(TerminalPropertyRequest& a, TerminalPropertyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalPropertyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalPropertyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalPropertyRequest& from);
  void MergeFrom(const TerminalPropertyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalPropertyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalPropertyRequest_RequestType RequestType;
  static const RequestType UPDATE =
    TerminalPropertyRequest_RequestType_UPDATE;
  static const RequestType GET =
    TerminalPropertyRequest_RequestType_GET;
  static inline bool RequestType_IsValid(int value) {
    return TerminalPropertyRequest_RequestType_IsValid(value);
  }
  static const RequestType RequestType_MIN =
    TerminalPropertyRequest_RequestType_RequestType_MIN;
  static const RequestType RequestType_MAX =
    TerminalPropertyRequest_RequestType_RequestType_MAX;
  static const int RequestType_ARRAYSIZE =
    TerminalPropertyRequest_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestType_descriptor() {
    return TerminalPropertyRequest_RequestType_descriptor();
  }
  static inline const ::std::string& RequestType_Name(RequestType value) {
    return TerminalPropertyRequest_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(const ::std::string& name,
      RequestType* value) {
    return TerminalPropertyRequest_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .LTMessage.TerminalProperty terminal_list = 2;
  int terminal_list_size() const;
  void clear_terminal_list();
  static const int kTerminalListFieldNumber = 2;
  const ::LTMessage::TerminalProperty& terminal_list(int index) const;
  ::LTMessage::TerminalProperty* mutable_terminal_list(int index);
  ::LTMessage::TerminalProperty* add_terminal_list();
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >*
      mutable_terminal_list();
  const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >&
      terminal_list() const;

  // .LTMessage.TerminalPropertyRequest.RequestType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::LTMessage::TerminalPropertyRequest_RequestType type() const;
  void set_type(::LTMessage::TerminalPropertyRequest_RequestType value);

  // @@protoc_insertion_point(class_scope:LTMessage.TerminalPropertyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty > terminal_list_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsTerminalPropertyRequestImpl();
};
// -------------------------------------------------------------------

class TerminalPropertyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.TerminalPropertyResponse) */ {
 public:
  TerminalPropertyResponse();
  virtual ~TerminalPropertyResponse();

  TerminalPropertyResponse(const TerminalPropertyResponse& from);

  inline TerminalPropertyResponse& operator=(const TerminalPropertyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalPropertyResponse(TerminalPropertyResponse&& from) noexcept
    : TerminalPropertyResponse() {
    *this = ::std::move(from);
  }

  inline TerminalPropertyResponse& operator=(TerminalPropertyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalPropertyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalPropertyResponse* internal_default_instance() {
    return reinterpret_cast<const TerminalPropertyResponse*>(
               &_TerminalPropertyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(TerminalPropertyResponse* other);
  friend void swap(TerminalPropertyResponse& a, TerminalPropertyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalPropertyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalPropertyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalPropertyResponse& from);
  void MergeFrom(const TerminalPropertyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalPropertyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LTMessage.TerminalProperty terminal_list = 2;
  int terminal_list_size() const;
  void clear_terminal_list();
  static const int kTerminalListFieldNumber = 2;
  const ::LTMessage::TerminalProperty& terminal_list(int index) const;
  ::LTMessage::TerminalProperty* mutable_terminal_list(int index);
  ::LTMessage::TerminalProperty* add_terminal_list();
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >*
      mutable_terminal_list();
  const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >&
      terminal_list() const;

  // .LTMessage.ResponseStatus status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  const ::LTMessage::ResponseStatus& status() const;
  ::LTMessage::ResponseStatus* release_status();
  ::LTMessage::ResponseStatus* mutable_status();
  void set_allocated_status(::LTMessage::ResponseStatus* status);

  // @@protoc_insertion_point(class_scope:LTMessage.TerminalPropertyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty > terminal_list_;
  ::LTMessage::ResponseStatus* status_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsTerminalPropertyResponseImpl();
};
// -------------------------------------------------------------------

class TerminalActionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.TerminalActionRequest) */ {
 public:
  TerminalActionRequest();
  virtual ~TerminalActionRequest();

  TerminalActionRequest(const TerminalActionRequest& from);

  inline TerminalActionRequest& operator=(const TerminalActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalActionRequest(TerminalActionRequest&& from) noexcept
    : TerminalActionRequest() {
    *this = ::std::move(from);
  }

  inline TerminalActionRequest& operator=(TerminalActionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalActionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalActionRequest* internal_default_instance() {
    return reinterpret_cast<const TerminalActionRequest*>(
               &_TerminalActionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TerminalActionRequest* other);
  friend void swap(TerminalActionRequest& a, TerminalActionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalActionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalActionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalActionRequest& from);
  void MergeFrom(const TerminalActionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalActionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TerminalActionRequest_RequestType RequestType;
  static const RequestType RESTART_HOST =
    TerminalActionRequest_RequestType_RESTART_HOST;
  static const RequestType RESTART_BIN =
    TerminalActionRequest_RequestType_RESTART_BIN;
  static const RequestType UPDATE_BIN =
    TerminalActionRequest_RequestType_UPDATE_BIN;
  static const RequestType START_CALIBRATION =
    TerminalActionRequest_RequestType_START_CALIBRATION;
  static const RequestType STOP_CALIBRATION =
    TerminalActionRequest_RequestType_STOP_CALIBRATION;
  static const RequestType RUNTIME_CHECK =
    TerminalActionRequest_RequestType_RUNTIME_CHECK;
  static inline bool RequestType_IsValid(int value) {
    return TerminalActionRequest_RequestType_IsValid(value);
  }
  static const RequestType RequestType_MIN =
    TerminalActionRequest_RequestType_RequestType_MIN;
  static const RequestType RequestType_MAX =
    TerminalActionRequest_RequestType_RequestType_MAX;
  static const int RequestType_ARRAYSIZE =
    TerminalActionRequest_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestType_descriptor() {
    return TerminalActionRequest_RequestType_descriptor();
  }
  static inline const ::std::string& RequestType_Name(RequestType value) {
    return TerminalActionRequest_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(const ::std::string& name,
      RequestType* value) {
    return TerminalActionRequest_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .LTMessage.TerminalProperty terminal_list = 4;
  int terminal_list_size() const;
  void clear_terminal_list();
  static const int kTerminalListFieldNumber = 4;
  const ::LTMessage::TerminalProperty& terminal_list(int index) const;
  ::LTMessage::TerminalProperty* mutable_terminal_list(int index);
  ::LTMessage::TerminalProperty* add_terminal_list();
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >*
      mutable_terminal_list();
  const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >&
      terminal_list() const;

  // string update_url = 3;
  void clear_update_url();
  static const int kUpdateUrlFieldNumber = 3;
  const ::std::string& update_url() const;
  void set_update_url(const ::std::string& value);
  #if LANG_CXX11
  void set_update_url(::std::string&& value);
  #endif
  void set_update_url(const char* value);
  void set_update_url(const char* value, size_t size);
  ::std::string* mutable_update_url();
  ::std::string* release_update_url();
  void set_allocated_update_url(::std::string* update_url);

  // int32 sequence = 1;
  void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // .LTMessage.TerminalActionRequest.RequestType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::LTMessage::TerminalActionRequest_RequestType type() const;
  void set_type(::LTMessage::TerminalActionRequest_RequestType value);

  // @@protoc_insertion_point(class_scope:LTMessage.TerminalActionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty > terminal_list_;
  ::google::protobuf::internal::ArenaStringPtr update_url_;
  ::google::protobuf::int32 sequence_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsTerminalActionRequestImpl();
};
// -------------------------------------------------------------------

class TerminalActionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.TerminalActionResponse) */ {
 public:
  TerminalActionResponse();
  virtual ~TerminalActionResponse();

  TerminalActionResponse(const TerminalActionResponse& from);

  inline TerminalActionResponse& operator=(const TerminalActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalActionResponse(TerminalActionResponse&& from) noexcept
    : TerminalActionResponse() {
    *this = ::std::move(from);
  }

  inline TerminalActionResponse& operator=(TerminalActionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalActionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalActionResponse* internal_default_instance() {
    return reinterpret_cast<const TerminalActionResponse*>(
               &_TerminalActionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(TerminalActionResponse* other);
  friend void swap(TerminalActionResponse& a, TerminalActionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalActionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalActionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalActionResponse& from);
  void MergeFrom(const TerminalActionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalActionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LTMessage.ResponseStatus status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::LTMessage::ResponseStatus& status() const;
  ::LTMessage::ResponseStatus* release_status();
  ::LTMessage::ResponseStatus* mutable_status();
  void set_allocated_status(::LTMessage::ResponseStatus* status);

  // int32 sequence = 1;
  void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LTMessage.TerminalActionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LTMessage::ResponseStatus* status_;
  ::google::protobuf::int32 sequence_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsTerminalActionResponseImpl();
};
// -------------------------------------------------------------------

class BaseStationPropertyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.BaseStationPropertyRequest) */ {
 public:
  BaseStationPropertyRequest();
  virtual ~BaseStationPropertyRequest();

  BaseStationPropertyRequest(const BaseStationPropertyRequest& from);

  inline BaseStationPropertyRequest& operator=(const BaseStationPropertyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BaseStationPropertyRequest(BaseStationPropertyRequest&& from) noexcept
    : BaseStationPropertyRequest() {
    *this = ::std::move(from);
  }

  inline BaseStationPropertyRequest& operator=(BaseStationPropertyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseStationPropertyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BaseStationPropertyRequest* internal_default_instance() {
    return reinterpret_cast<const BaseStationPropertyRequest*>(
               &_BaseStationPropertyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(BaseStationPropertyRequest* other);
  friend void swap(BaseStationPropertyRequest& a, BaseStationPropertyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BaseStationPropertyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseStationPropertyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseStationPropertyRequest& from);
  void MergeFrom(const BaseStationPropertyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseStationPropertyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BaseStationPropertyRequest_RequestType RequestType;
  static const RequestType UPDATE_ACTIVE =
    BaseStationPropertyRequest_RequestType_UPDATE_ACTIVE;
  static const RequestType GET_ACTIVE =
    BaseStationPropertyRequest_RequestType_GET_ACTIVE;
  static const RequestType GET_ALL =
    BaseStationPropertyRequest_RequestType_GET_ALL;
  static const RequestType REMOVE =
    BaseStationPropertyRequest_RequestType_REMOVE;
  static inline bool RequestType_IsValid(int value) {
    return BaseStationPropertyRequest_RequestType_IsValid(value);
  }
  static const RequestType RequestType_MIN =
    BaseStationPropertyRequest_RequestType_RequestType_MIN;
  static const RequestType RequestType_MAX =
    BaseStationPropertyRequest_RequestType_RequestType_MAX;
  static const int RequestType_ARRAYSIZE =
    BaseStationPropertyRequest_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestType_descriptor() {
    return BaseStationPropertyRequest_RequestType_descriptor();
  }
  static inline const ::std::string& RequestType_Name(RequestType value) {
    return BaseStationPropertyRequest_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(const ::std::string& name,
      RequestType* value) {
    return BaseStationPropertyRequest_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .LTMessage.BaseStationProperty base_station_list = 2;
  int base_station_list_size() const;
  void clear_base_station_list();
  static const int kBaseStationListFieldNumber = 2;
  const ::LTMessage::BaseStationProperty& base_station_list(int index) const;
  ::LTMessage::BaseStationProperty* mutable_base_station_list(int index);
  ::LTMessage::BaseStationProperty* add_base_station_list();
  ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty >*
      mutable_base_station_list();
  const ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty >&
      base_station_list() const;

  // .LTMessage.BaseStationPropertyRequest.RequestType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::LTMessage::BaseStationPropertyRequest_RequestType type() const;
  void set_type(::LTMessage::BaseStationPropertyRequest_RequestType value);

  // @@protoc_insertion_point(class_scope:LTMessage.BaseStationPropertyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty > base_station_list_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsBaseStationPropertyRequestImpl();
};
// -------------------------------------------------------------------

class BaseStationPropertyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.BaseStationPropertyResponse) */ {
 public:
  BaseStationPropertyResponse();
  virtual ~BaseStationPropertyResponse();

  BaseStationPropertyResponse(const BaseStationPropertyResponse& from);

  inline BaseStationPropertyResponse& operator=(const BaseStationPropertyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BaseStationPropertyResponse(BaseStationPropertyResponse&& from) noexcept
    : BaseStationPropertyResponse() {
    *this = ::std::move(from);
  }

  inline BaseStationPropertyResponse& operator=(BaseStationPropertyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseStationPropertyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BaseStationPropertyResponse* internal_default_instance() {
    return reinterpret_cast<const BaseStationPropertyResponse*>(
               &_BaseStationPropertyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(BaseStationPropertyResponse* other);
  friend void swap(BaseStationPropertyResponse& a, BaseStationPropertyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BaseStationPropertyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseStationPropertyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseStationPropertyResponse& from);
  void MergeFrom(const BaseStationPropertyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseStationPropertyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LTMessage.BaseStationProperty base_station_list = 2;
  int base_station_list_size() const;
  void clear_base_station_list();
  static const int kBaseStationListFieldNumber = 2;
  const ::LTMessage::BaseStationProperty& base_station_list(int index) const;
  ::LTMessage::BaseStationProperty* mutable_base_station_list(int index);
  ::LTMessage::BaseStationProperty* add_base_station_list();
  ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty >*
      mutable_base_station_list();
  const ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty >&
      base_station_list() const;

  // .LTMessage.ResponseStatus status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  const ::LTMessage::ResponseStatus& status() const;
  ::LTMessage::ResponseStatus* release_status();
  ::LTMessage::ResponseStatus* mutable_status();
  void set_allocated_status(::LTMessage::ResponseStatus* status);

  // @@protoc_insertion_point(class_scope:LTMessage.BaseStationPropertyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty > base_station_list_;
  ::LTMessage::ResponseStatus* status_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsBaseStationPropertyResponseImpl();
};
// -------------------------------------------------------------------

class BaseStationActionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.BaseStationActionRequest) */ {
 public:
  BaseStationActionRequest();
  virtual ~BaseStationActionRequest();

  BaseStationActionRequest(const BaseStationActionRequest& from);

  inline BaseStationActionRequest& operator=(const BaseStationActionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BaseStationActionRequest(BaseStationActionRequest&& from) noexcept
    : BaseStationActionRequest() {
    *this = ::std::move(from);
  }

  inline BaseStationActionRequest& operator=(BaseStationActionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseStationActionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BaseStationActionRequest* internal_default_instance() {
    return reinterpret_cast<const BaseStationActionRequest*>(
               &_BaseStationActionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(BaseStationActionRequest* other);
  friend void swap(BaseStationActionRequest& a, BaseStationActionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BaseStationActionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseStationActionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseStationActionRequest& from);
  void MergeFrom(const BaseStationActionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseStationActionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string command = 2;
  void clear_command();
  static const int kCommandFieldNumber = 2;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // int32 sequence = 1;
  void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LTMessage.BaseStationActionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  ::google::protobuf::int32 sequence_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsBaseStationActionRequestImpl();
};
// -------------------------------------------------------------------

class BaseStationActionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.BaseStationActionResponse) */ {
 public:
  BaseStationActionResponse();
  virtual ~BaseStationActionResponse();

  BaseStationActionResponse(const BaseStationActionResponse& from);

  inline BaseStationActionResponse& operator=(const BaseStationActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BaseStationActionResponse(BaseStationActionResponse&& from) noexcept
    : BaseStationActionResponse() {
    *this = ::std::move(from);
  }

  inline BaseStationActionResponse& operator=(BaseStationActionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseStationActionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BaseStationActionResponse* internal_default_instance() {
    return reinterpret_cast<const BaseStationActionResponse*>(
               &_BaseStationActionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(BaseStationActionResponse* other);
  friend void swap(BaseStationActionResponse& a, BaseStationActionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BaseStationActionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseStationActionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseStationActionResponse& from);
  void MergeFrom(const BaseStationActionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseStationActionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bs_info = 3;
  void clear_bs_info();
  static const int kBsInfoFieldNumber = 3;
  const ::std::string& bs_info() const;
  void set_bs_info(const ::std::string& value);
  #if LANG_CXX11
  void set_bs_info(::std::string&& value);
  #endif
  void set_bs_info(const char* value);
  void set_bs_info(const char* value, size_t size);
  ::std::string* mutable_bs_info();
  ::std::string* release_bs_info();
  void set_allocated_bs_info(::std::string* bs_info);

  // .LTMessage.ResponseStatus status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::LTMessage::ResponseStatus& status() const;
  ::LTMessage::ResponseStatus* release_status();
  ::LTMessage::ResponseStatus* mutable_status();
  void set_allocated_status(::LTMessage::ResponseStatus* status);

  // int32 sequence = 1;
  void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LTMessage.BaseStationActionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bs_info_;
  ::LTMessage::ResponseStatus* status_;
  ::google::protobuf::int32 sequence_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsBaseStationActionResponseImpl();
};
// -------------------------------------------------------------------

class GuiHeartbeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.GuiHeartbeatRequest) */ {
 public:
  GuiHeartbeatRequest();
  virtual ~GuiHeartbeatRequest();

  GuiHeartbeatRequest(const GuiHeartbeatRequest& from);

  inline GuiHeartbeatRequest& operator=(const GuiHeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuiHeartbeatRequest(GuiHeartbeatRequest&& from) noexcept
    : GuiHeartbeatRequest() {
    *this = ::std::move(from);
  }

  inline GuiHeartbeatRequest& operator=(GuiHeartbeatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuiHeartbeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuiHeartbeatRequest* internal_default_instance() {
    return reinterpret_cast<const GuiHeartbeatRequest*>(
               &_GuiHeartbeatRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GuiHeartbeatRequest* other);
  friend void swap(GuiHeartbeatRequest& a, GuiHeartbeatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuiHeartbeatRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GuiHeartbeatRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuiHeartbeatRequest& from);
  void MergeFrom(const GuiHeartbeatRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuiHeartbeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string mac_addr = 1;
  void clear_mac_addr();
  static const int kMacAddrFieldNumber = 1;
  const ::std::string& mac_addr() const;
  void set_mac_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_mac_addr(::std::string&& value);
  #endif
  void set_mac_addr(const char* value);
  void set_mac_addr(const char* value, size_t size);
  ::std::string* mutable_mac_addr();
  ::std::string* release_mac_addr();
  void set_allocated_mac_addr(::std::string* mac_addr);

  // int32 sequence = 2;
  void clear_sequence();
  static const int kSequenceFieldNumber = 2;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LTMessage.GuiHeartbeatRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mac_addr_;
  ::google::protobuf::int32 sequence_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsGuiHeartbeatRequestImpl();
};
// -------------------------------------------------------------------

class GuiHeartbeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.GuiHeartbeatResponse) */ {
 public:
  GuiHeartbeatResponse();
  virtual ~GuiHeartbeatResponse();

  GuiHeartbeatResponse(const GuiHeartbeatResponse& from);

  inline GuiHeartbeatResponse& operator=(const GuiHeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuiHeartbeatResponse(GuiHeartbeatResponse&& from) noexcept
    : GuiHeartbeatResponse() {
    *this = ::std::move(from);
  }

  inline GuiHeartbeatResponse& operator=(GuiHeartbeatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GuiHeartbeatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuiHeartbeatResponse* internal_default_instance() {
    return reinterpret_cast<const GuiHeartbeatResponse*>(
               &_GuiHeartbeatResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GuiHeartbeatResponse* other);
  friend void swap(GuiHeartbeatResponse& a, GuiHeartbeatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuiHeartbeatResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GuiHeartbeatResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GuiHeartbeatResponse& from);
  void MergeFrom(const GuiHeartbeatResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GuiHeartbeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LTMessage.TerminalExceptStatus term_except_status = 4;
  int term_except_status_size() const;
  void clear_term_except_status();
  static const int kTermExceptStatusFieldNumber = 4;
  const ::LTMessage::TerminalExceptStatus& term_except_status(int index) const;
  ::LTMessage::TerminalExceptStatus* mutable_term_except_status(int index);
  ::LTMessage::TerminalExceptStatus* add_term_except_status();
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalExceptStatus >*
      mutable_term_except_status();
  const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalExceptStatus >&
      term_except_status() const;

  // repeated .LTMessage.BasesExceptStatus bases_except_status = 5;
  int bases_except_status_size() const;
  void clear_bases_except_status();
  static const int kBasesExceptStatusFieldNumber = 5;
  const ::LTMessage::BasesExceptStatus& bases_except_status(int index) const;
  ::LTMessage::BasesExceptStatus* mutable_bases_except_status(int index);
  ::LTMessage::BasesExceptStatus* add_bases_except_status();
  ::google::protobuf::RepeatedPtrField< ::LTMessage::BasesExceptStatus >*
      mutable_bases_except_status();
  const ::google::protobuf::RepeatedPtrField< ::LTMessage::BasesExceptStatus >&
      bases_except_status() const;

  // .LTMessage.ResponseStatus status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::LTMessage::ResponseStatus& status() const;
  ::LTMessage::ResponseStatus* release_status();
  ::LTMessage::ResponseStatus* mutable_status();
  void set_allocated_status(::LTMessage::ResponseStatus* status);

  // .LTMessage.UpdateEvent event = 3;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 3;
  const ::LTMessage::UpdateEvent& event() const;
  ::LTMessage::UpdateEvent* release_event();
  ::LTMessage::UpdateEvent* mutable_event();
  void set_allocated_event(::LTMessage::UpdateEvent* event);

  // int32 sequence = 1;
  void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LTMessage.GuiHeartbeatResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalExceptStatus > term_except_status_;
  ::google::protobuf::RepeatedPtrField< ::LTMessage::BasesExceptStatus > bases_except_status_;
  ::LTMessage::ResponseStatus* status_;
  ::LTMessage::UpdateEvent* event_;
  ::google::protobuf::int32 sequence_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsGuiHeartbeatResponseImpl();
};
// -------------------------------------------------------------------

class TerminalHeartbeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.TerminalHeartbeatRequest) */ {
 public:
  TerminalHeartbeatRequest();
  virtual ~TerminalHeartbeatRequest();

  TerminalHeartbeatRequest(const TerminalHeartbeatRequest& from);

  inline TerminalHeartbeatRequest& operator=(const TerminalHeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalHeartbeatRequest(TerminalHeartbeatRequest&& from) noexcept
    : TerminalHeartbeatRequest() {
    *this = ::std::move(from);
  }

  inline TerminalHeartbeatRequest& operator=(TerminalHeartbeatRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalHeartbeatRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalHeartbeatRequest* internal_default_instance() {
    return reinterpret_cast<const TerminalHeartbeatRequest*>(
               &_TerminalHeartbeatRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(TerminalHeartbeatRequest* other);
  friend void swap(TerminalHeartbeatRequest& a, TerminalHeartbeatRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalHeartbeatRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalHeartbeatRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalHeartbeatRequest& from);
  void MergeFrom(const TerminalHeartbeatRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalHeartbeatRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LTMessage.TerminalExceptStatus except_status_detail = 3;
  bool has_except_status_detail() const;
  void clear_except_status_detail();
  static const int kExceptStatusDetailFieldNumber = 3;
  const ::LTMessage::TerminalExceptStatus& except_status_detail() const;
  ::LTMessage::TerminalExceptStatus* release_except_status_detail();
  ::LTMessage::TerminalExceptStatus* mutable_except_status_detail();
  void set_allocated_except_status_detail(::LTMessage::TerminalExceptStatus* except_status_detail);

  // int32 sequence = 1;
  void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // bool ok_status = 2;
  void clear_ok_status();
  static const int kOkStatusFieldNumber = 2;
  bool ok_status() const;
  void set_ok_status(bool value);

  // @@protoc_insertion_point(class_scope:LTMessage.TerminalHeartbeatRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LTMessage::TerminalExceptStatus* except_status_detail_;
  ::google::protobuf::int32 sequence_;
  bool ok_status_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsTerminalHeartbeatRequestImpl();
};
// -------------------------------------------------------------------

class TerminalHeartbeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.TerminalHeartbeatResponse) */ {
 public:
  TerminalHeartbeatResponse();
  virtual ~TerminalHeartbeatResponse();

  TerminalHeartbeatResponse(const TerminalHeartbeatResponse& from);

  inline TerminalHeartbeatResponse& operator=(const TerminalHeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TerminalHeartbeatResponse(TerminalHeartbeatResponse&& from) noexcept
    : TerminalHeartbeatResponse() {
    *this = ::std::move(from);
  }

  inline TerminalHeartbeatResponse& operator=(TerminalHeartbeatResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TerminalHeartbeatResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TerminalHeartbeatResponse* internal_default_instance() {
    return reinterpret_cast<const TerminalHeartbeatResponse*>(
               &_TerminalHeartbeatResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(TerminalHeartbeatResponse* other);
  friend void swap(TerminalHeartbeatResponse& a, TerminalHeartbeatResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TerminalHeartbeatResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  TerminalHeartbeatResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TerminalHeartbeatResponse& from);
  void MergeFrom(const TerminalHeartbeatResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TerminalHeartbeatResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LTMessage.ResponseStatus status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::LTMessage::ResponseStatus& status() const;
  ::LTMessage::ResponseStatus* release_status();
  ::LTMessage::ResponseStatus* mutable_status();
  void set_allocated_status(::LTMessage::ResponseStatus* status);

  // .LTMessage.UpdateEvent event = 3;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 3;
  const ::LTMessage::UpdateEvent& event() const;
  ::LTMessage::UpdateEvent* release_event();
  ::LTMessage::UpdateEvent* mutable_event();
  void set_allocated_event(::LTMessage::UpdateEvent* event);

  // .LTMessage.TerminalActionRequest action_request_from_gui = 4;
  bool has_action_request_from_gui() const;
  void clear_action_request_from_gui();
  static const int kActionRequestFromGuiFieldNumber = 4;
  const ::LTMessage::TerminalActionRequest& action_request_from_gui() const;
  ::LTMessage::TerminalActionRequest* release_action_request_from_gui();
  ::LTMessage::TerminalActionRequest* mutable_action_request_from_gui();
  void set_allocated_action_request_from_gui(::LTMessage::TerminalActionRequest* action_request_from_gui);

  // int32 sequence = 1;
  void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  ::google::protobuf::int32 sequence() const;
  void set_sequence(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LTMessage.TerminalHeartbeatResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LTMessage::ResponseStatus* status_;
  ::LTMessage::UpdateEvent* event_;
  ::LTMessage::TerminalActionRequest* action_request_from_gui_;
  ::google::protobuf::int32 sequence_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsTerminalHeartbeatResponseImpl();
};
// -------------------------------------------------------------------

class FieldPropertyUpdateRequest_FieldScope : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.FieldPropertyUpdateRequest.FieldScope) */ {
 public:
  FieldPropertyUpdateRequest_FieldScope();
  virtual ~FieldPropertyUpdateRequest_FieldScope();

  FieldPropertyUpdateRequest_FieldScope(const FieldPropertyUpdateRequest_FieldScope& from);

  inline FieldPropertyUpdateRequest_FieldScope& operator=(const FieldPropertyUpdateRequest_FieldScope& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FieldPropertyUpdateRequest_FieldScope(FieldPropertyUpdateRequest_FieldScope&& from) noexcept
    : FieldPropertyUpdateRequest_FieldScope() {
    *this = ::std::move(from);
  }

  inline FieldPropertyUpdateRequest_FieldScope& operator=(FieldPropertyUpdateRequest_FieldScope&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldPropertyUpdateRequest_FieldScope& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldPropertyUpdateRequest_FieldScope* internal_default_instance() {
    return reinterpret_cast<const FieldPropertyUpdateRequest_FieldScope*>(
               &_FieldPropertyUpdateRequest_FieldScope_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(FieldPropertyUpdateRequest_FieldScope* other);
  friend void swap(FieldPropertyUpdateRequest_FieldScope& a, FieldPropertyUpdateRequest_FieldScope& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FieldPropertyUpdateRequest_FieldScope* New() const PROTOBUF_FINAL { return New(NULL); }

  FieldPropertyUpdateRequest_FieldScope* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FieldPropertyUpdateRequest_FieldScope& from);
  void MergeFrom(const FieldPropertyUpdateRequest_FieldScope& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FieldPropertyUpdateRequest_FieldScope* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double min_x = 1;
  void clear_min_x();
  static const int kMinXFieldNumber = 1;
  double min_x() const;
  void set_min_x(double value);

  // double min_y = 2;
  void clear_min_y();
  static const int kMinYFieldNumber = 2;
  double min_y() const;
  void set_min_y(double value);

  // double min_z = 3;
  void clear_min_z();
  static const int kMinZFieldNumber = 3;
  double min_z() const;
  void set_min_z(double value);

  // double max_x = 4;
  void clear_max_x();
  static const int kMaxXFieldNumber = 4;
  double max_x() const;
  void set_max_x(double value);

  // double max_y = 5;
  void clear_max_y();
  static const int kMaxYFieldNumber = 5;
  double max_y() const;
  void set_max_y(double value);

  // double max_z = 6;
  void clear_max_z();
  static const int kMaxZFieldNumber = 6;
  double max_z() const;
  void set_max_z(double value);

  // @@protoc_insertion_point(class_scope:LTMessage.FieldPropertyUpdateRequest.FieldScope)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double min_x_;
  double min_y_;
  double min_z_;
  double max_x_;
  double max_y_;
  double max_z_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsFieldPropertyUpdateRequest_FieldScopeImpl();
};
// -------------------------------------------------------------------

class FieldPropertyUpdateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.FieldPropertyUpdateRequest) */ {
 public:
  FieldPropertyUpdateRequest();
  virtual ~FieldPropertyUpdateRequest();

  FieldPropertyUpdateRequest(const FieldPropertyUpdateRequest& from);

  inline FieldPropertyUpdateRequest& operator=(const FieldPropertyUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FieldPropertyUpdateRequest(FieldPropertyUpdateRequest&& from) noexcept
    : FieldPropertyUpdateRequest() {
    *this = ::std::move(from);
  }

  inline FieldPropertyUpdateRequest& operator=(FieldPropertyUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldPropertyUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldPropertyUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const FieldPropertyUpdateRequest*>(
               &_FieldPropertyUpdateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(FieldPropertyUpdateRequest* other);
  friend void swap(FieldPropertyUpdateRequest& a, FieldPropertyUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FieldPropertyUpdateRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FieldPropertyUpdateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FieldPropertyUpdateRequest& from);
  void MergeFrom(const FieldPropertyUpdateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FieldPropertyUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FieldPropertyUpdateRequest_FieldScope FieldScope;

  // accessors -------------------------------------------------------

  // .LTMessage.FieldPropertyUpdateRequest.FieldScope field_scope = 1;
  bool has_field_scope() const;
  void clear_field_scope();
  static const int kFieldScopeFieldNumber = 1;
  const ::LTMessage::FieldPropertyUpdateRequest_FieldScope& field_scope() const;
  ::LTMessage::FieldPropertyUpdateRequest_FieldScope* release_field_scope();
  ::LTMessage::FieldPropertyUpdateRequest_FieldScope* mutable_field_scope();
  void set_allocated_field_scope(::LTMessage::FieldPropertyUpdateRequest_FieldScope* field_scope);

  // @@protoc_insertion_point(class_scope:LTMessage.FieldPropertyUpdateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LTMessage::FieldPropertyUpdateRequest_FieldScope* field_scope_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsFieldPropertyUpdateRequestImpl();
};
// -------------------------------------------------------------------

class FieldPropertyUpdateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.FieldPropertyUpdateResponse) */ {
 public:
  FieldPropertyUpdateResponse();
  virtual ~FieldPropertyUpdateResponse();

  FieldPropertyUpdateResponse(const FieldPropertyUpdateResponse& from);

  inline FieldPropertyUpdateResponse& operator=(const FieldPropertyUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FieldPropertyUpdateResponse(FieldPropertyUpdateResponse&& from) noexcept
    : FieldPropertyUpdateResponse() {
    *this = ::std::move(from);
  }

  inline FieldPropertyUpdateResponse& operator=(FieldPropertyUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FieldPropertyUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FieldPropertyUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const FieldPropertyUpdateResponse*>(
               &_FieldPropertyUpdateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(FieldPropertyUpdateResponse* other);
  friend void swap(FieldPropertyUpdateResponse& a, FieldPropertyUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FieldPropertyUpdateResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  FieldPropertyUpdateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FieldPropertyUpdateResponse& from);
  void MergeFrom(const FieldPropertyUpdateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FieldPropertyUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .LTMessage.ResponseStatus status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  const ::LTMessage::ResponseStatus& status() const;
  ::LTMessage::ResponseStatus* release_status();
  ::LTMessage::ResponseStatus* mutable_status();
  void set_allocated_status(::LTMessage::ResponseStatus* status);

  // @@protoc_insertion_point(class_scope:LTMessage.FieldPropertyUpdateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::LTMessage::ResponseStatus* status_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsFieldPropertyUpdateResponseImpl();
};
// -------------------------------------------------------------------

class ControllerBroadcast : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.ControllerBroadcast) */ {
 public:
  ControllerBroadcast();
  virtual ~ControllerBroadcast();

  ControllerBroadcast(const ControllerBroadcast& from);

  inline ControllerBroadcast& operator=(const ControllerBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ControllerBroadcast(ControllerBroadcast&& from) noexcept
    : ControllerBroadcast() {
    *this = ::std::move(from);
  }

  inline ControllerBroadcast& operator=(ControllerBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ControllerBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ControllerBroadcast* internal_default_instance() {
    return reinterpret_cast<const ControllerBroadcast*>(
               &_ControllerBroadcast_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ControllerBroadcast* other);
  friend void swap(ControllerBroadcast& a, ControllerBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ControllerBroadcast* New() const PROTOBUF_FINAL { return New(NULL); }

  ControllerBroadcast* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ControllerBroadcast& from);
  void MergeFrom(const ControllerBroadcast& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ControllerBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ControllerBroadcast_ControllerType ControllerType;
  static const ControllerType MULTI =
    ControllerBroadcast_ControllerType_MULTI;
  static const ControllerType SINGLE =
    ControllerBroadcast_ControllerType_SINGLE;
  static inline bool ControllerType_IsValid(int value) {
    return ControllerBroadcast_ControllerType_IsValid(value);
  }
  static const ControllerType ControllerType_MIN =
    ControllerBroadcast_ControllerType_ControllerType_MIN;
  static const ControllerType ControllerType_MAX =
    ControllerBroadcast_ControllerType_ControllerType_MAX;
  static const int ControllerType_ARRAYSIZE =
    ControllerBroadcast_ControllerType_ControllerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ControllerType_descriptor() {
    return ControllerBroadcast_ControllerType_descriptor();
  }
  static inline const ::std::string& ControllerType_Name(ControllerType value) {
    return ControllerBroadcast_ControllerType_Name(value);
  }
  static inline bool ControllerType_Parse(const ::std::string& name,
      ControllerType* value) {
    return ControllerBroadcast_ControllerType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string ip_addr = 1;
  void clear_ip_addr();
  static const int kIpAddrFieldNumber = 1;
  const ::std::string& ip_addr() const;
  void set_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_addr(::std::string&& value);
  #endif
  void set_ip_addr(const char* value);
  void set_ip_addr(const char* value, size_t size);
  ::std::string* mutable_ip_addr();
  ::std::string* release_ip_addr();
  void set_allocated_ip_addr(::std::string* ip_addr);

  // int32 terminal_port = 2;
  void clear_terminal_port();
  static const int kTerminalPortFieldNumber = 2;
  ::google::protobuf::int32 terminal_port() const;
  void set_terminal_port(::google::protobuf::int32 value);

  // int32 manager_port = 3;
  void clear_manager_port();
  static const int kManagerPortFieldNumber = 3;
  ::google::protobuf::int32 manager_port() const;
  void set_manager_port(::google::protobuf::int32 value);

  // int32 loc_xsub_port = 4;
  void clear_loc_xsub_port();
  static const int kLocXsubPortFieldNumber = 4;
  ::google::protobuf::int32 loc_xsub_port() const;
  void set_loc_xsub_port(::google::protobuf::int32 value);

  // int32 loc_xpub_port = 5;
  void clear_loc_xpub_port();
  static const int kLocXpubPortFieldNumber = 5;
  ::google::protobuf::int32 loc_xpub_port() const;
  void set_loc_xpub_port(::google::protobuf::int32 value);

  // .LTMessage.ControllerBroadcast.ControllerType type = 6;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::LTMessage::ControllerBroadcast_ControllerType type() const;
  void set_type(::LTMessage::ControllerBroadcast_ControllerType value);

  // @@protoc_insertion_point(class_scope:LTMessage.ControllerBroadcast)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_addr_;
  ::google::protobuf::int32 terminal_port_;
  ::google::protobuf::int32 manager_port_;
  ::google::protobuf::int32 loc_xsub_port_;
  ::google::protobuf::int32 loc_xpub_port_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsControllerBroadcastImpl();
};
// -------------------------------------------------------------------

class BroadcastResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LTMessage.BroadcastResponse) */ {
 public:
  BroadcastResponse();
  virtual ~BroadcastResponse();

  BroadcastResponse(const BroadcastResponse& from);

  inline BroadcastResponse& operator=(const BroadcastResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BroadcastResponse(BroadcastResponse&& from) noexcept
    : BroadcastResponse() {
    *this = ::std::move(from);
  }

  inline BroadcastResponse& operator=(BroadcastResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BroadcastResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BroadcastResponse* internal_default_instance() {
    return reinterpret_cast<const BroadcastResponse*>(
               &_BroadcastResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(BroadcastResponse* other);
  friend void swap(BroadcastResponse& a, BroadcastResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BroadcastResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BroadcastResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BroadcastResponse& from);
  void MergeFrom(const BroadcastResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BroadcastResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BroadcastResponse_ResponseType ResponseType;
  static const ResponseType TERMINAL_TYPE =
    BroadcastResponse_ResponseType_TERMINAL_TYPE;
  static const ResponseType MANAGER_TYPE =
    BroadcastResponse_ResponseType_MANAGER_TYPE;
  static inline bool ResponseType_IsValid(int value) {
    return BroadcastResponse_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    BroadcastResponse_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    BroadcastResponse_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    BroadcastResponse_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return BroadcastResponse_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return BroadcastResponse_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return BroadcastResponse_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string ip_addr = 2;
  void clear_ip_addr();
  static const int kIpAddrFieldNumber = 2;
  const ::std::string& ip_addr() const;
  void set_ip_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_ip_addr(::std::string&& value);
  #endif
  void set_ip_addr(const char* value);
  void set_ip_addr(const char* value, size_t size);
  ::std::string* mutable_ip_addr();
  ::std::string* release_ip_addr();
  void set_allocated_ip_addr(::std::string* ip_addr);

  // string mac_addr = 3;
  void clear_mac_addr();
  static const int kMacAddrFieldNumber = 3;
  const ::std::string& mac_addr() const;
  void set_mac_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_mac_addr(::std::string&& value);
  #endif
  void set_mac_addr(const char* value);
  void set_mac_addr(const char* value, size_t size);
  ::std::string* mutable_mac_addr();
  ::std::string* release_mac_addr();
  void set_allocated_mac_addr(::std::string* mac_addr);

  // string host_name = 4;
  void clear_host_name();
  static const int kHostNameFieldNumber = 4;
  const ::std::string& host_name() const;
  void set_host_name(const ::std::string& value);
  #if LANG_CXX11
  void set_host_name(::std::string&& value);
  #endif
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  ::std::string* mutable_host_name();
  ::std::string* release_host_name();
  void set_allocated_host_name(::std::string* host_name);

  // .LTMessage.BroadcastResponse.ResponseType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::LTMessage::BroadcastResponse_ResponseType type() const;
  void set_type(::LTMessage::BroadcastResponse_ResponseType value);

  // @@protoc_insertion_point(class_scope:LTMessage.BroadcastResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_addr_;
  ::google::protobuf::internal::ArenaStringPtr mac_addr_;
  ::google::protobuf::internal::ArenaStringPtr host_name_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_LT_2emessage_2eproto::TableStruct;
  friend void ::protobuf_LT_2emessage_2eproto::InitDefaultsBroadcastResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PointXYZ

// double x = 1;
inline void PointXYZ::clear_x() {
  x_ = 0;
}
inline double PointXYZ::x() const {
  // @@protoc_insertion_point(field_get:LTMessage.PointXYZ.x)
  return x_;
}
inline void PointXYZ::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.PointXYZ.x)
}

// double y = 2;
inline void PointXYZ::clear_y() {
  y_ = 0;
}
inline double PointXYZ::y() const {
  // @@protoc_insertion_point(field_get:LTMessage.PointXYZ.y)
  return y_;
}
inline void PointXYZ::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.PointXYZ.y)
}

// double z = 3;
inline void PointXYZ::clear_z() {
  z_ = 0;
}
inline double PointXYZ::z() const {
  // @@protoc_insertion_point(field_get:LTMessage.PointXYZ.z)
  return z_;
}
inline void PointXYZ::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.PointXYZ.z)
}

// -------------------------------------------------------------------

// Location

// .LTMessage.Location.LocationType type = 1;
inline void Location::clear_type() {
  type_ = 0;
}
inline ::LTMessage::Location_LocationType Location::type() const {
  // @@protoc_insertion_point(field_get:LTMessage.Location.type)
  return static_cast< ::LTMessage::Location_LocationType >(type_);
}
inline void Location::set_type(::LTMessage::Location_LocationType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.Location.type)
}

// .LTMessage.PointXYZ coordinates = 2;
inline bool Location::has_coordinates() const {
  return this != internal_default_instance() && coordinates_ != NULL;
}
inline void Location::clear_coordinates() {
  if (GetArenaNoVirtual() == NULL && coordinates_ != NULL) {
    delete coordinates_;
  }
  coordinates_ = NULL;
}
inline const ::LTMessage::PointXYZ& Location::coordinates() const {
  const ::LTMessage::PointXYZ* p = coordinates_;
  // @@protoc_insertion_point(field_get:LTMessage.Location.coordinates)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::PointXYZ*>(
      &::LTMessage::_PointXYZ_default_instance_);
}
inline ::LTMessage::PointXYZ* Location::release_coordinates() {
  // @@protoc_insertion_point(field_release:LTMessage.Location.coordinates)
  
  ::LTMessage::PointXYZ* temp = coordinates_;
  coordinates_ = NULL;
  return temp;
}
inline ::LTMessage::PointXYZ* Location::mutable_coordinates() {
  
  if (coordinates_ == NULL) {
    coordinates_ = new ::LTMessage::PointXYZ;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.Location.coordinates)
  return coordinates_;
}
inline void Location::set_allocated_coordinates(::LTMessage::PointXYZ* coordinates) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete coordinates_;
  }
  if (coordinates) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coordinates = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinates, submessage_arena);
    }
    
  } else {
    
  }
  coordinates_ = coordinates;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.Location.coordinates)
}

// double heading = 3;
inline void Location::clear_heading() {
  heading_ = 0;
}
inline double Location::heading() const {
  // @@protoc_insertion_point(field_get:LTMessage.Location.heading)
  return heading_;
}
inline void Location::set_heading(double value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.Location.heading)
}

// double gamma = 4;
inline void Location::clear_gamma() {
  gamma_ = 0;
}
inline double Location::gamma() const {
  // @@protoc_insertion_point(field_get:LTMessage.Location.gamma)
  return gamma_;
}
inline void Location::set_gamma(double value) {
  
  gamma_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.Location.gamma)
}

// double theta = 5;
inline void Location::clear_theta() {
  theta_ = 0;
}
inline double Location::theta() const {
  // @@protoc_insertion_point(field_get:LTMessage.Location.theta)
  return theta_;
}
inline void Location::set_theta(double value) {
  
  theta_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.Location.theta)
}

// double ts = 6;
inline void Location::clear_ts() {
  ts_ = 0;
}
inline double Location::ts() const {
  // @@protoc_insertion_point(field_get:LTMessage.Location.ts)
  return ts_;
}
inline void Location::set_ts(double value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.Location.ts)
}

// int32 bs_index = 7;
inline void Location::clear_bs_index() {
  bs_index_ = 0;
}
inline ::google::protobuf::int32 Location::bs_index() const {
  // @@protoc_insertion_point(field_get:LTMessage.Location.bs_index)
  return bs_index_;
}
inline void Location::set_bs_index(::google::protobuf::int32 value) {
  
  bs_index_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.Location.bs_index)
}

// int32 sensor_id = 8;
inline void Location::clear_sensor_id() {
  sensor_id_ = 0;
}
inline ::google::protobuf::int32 Location::sensor_id() const {
  // @@protoc_insertion_point(field_get:LTMessage.Location.sensor_id)
  return sensor_id_;
}
inline void Location::set_sensor_id(::google::protobuf::int32 value) {
  
  sensor_id_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.Location.sensor_id)
}

// int32 sensor_channel_id = 9;
inline void Location::clear_sensor_channel_id() {
  sensor_channel_id_ = 0;
}
inline ::google::protobuf::int32 Location::sensor_channel_id() const {
  // @@protoc_insertion_point(field_get:LTMessage.Location.sensor_channel_id)
  return sensor_channel_id_;
}
inline void Location::set_sensor_channel_id(::google::protobuf::int32 value) {
  
  sensor_channel_id_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.Location.sensor_channel_id)
}

// string terminal_id = 10;
inline void Location::clear_terminal_id() {
  terminal_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Location::terminal_id() const {
  // @@protoc_insertion_point(field_get:LTMessage.Location.terminal_id)
  return terminal_id_.GetNoArena();
}
inline void Location::set_terminal_id(const ::std::string& value) {
  
  terminal_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.Location.terminal_id)
}
#if LANG_CXX11
inline void Location::set_terminal_id(::std::string&& value) {
  
  terminal_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.Location.terminal_id)
}
#endif
inline void Location::set_terminal_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  terminal_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.Location.terminal_id)
}
inline void Location::set_terminal_id(const char* value, size_t size) {
  
  terminal_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.Location.terminal_id)
}
inline ::std::string* Location::mutable_terminal_id() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.Location.terminal_id)
  return terminal_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Location::release_terminal_id() {
  // @@protoc_insertion_point(field_release:LTMessage.Location.terminal_id)
  
  return terminal_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Location::set_allocated_terminal_id(::std::string* terminal_id) {
  if (terminal_id != NULL) {
    
  } else {
    
  }
  terminal_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), terminal_id);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.Location.terminal_id)
}

// -------------------------------------------------------------------

// ResponseStatus

// .LTMessage.ResponseStatus.StatusCode code = 1;
inline void ResponseStatus::clear_code() {
  code_ = 0;
}
inline ::LTMessage::ResponseStatus_StatusCode ResponseStatus::code() const {
  // @@protoc_insertion_point(field_get:LTMessage.ResponseStatus.code)
  return static_cast< ::LTMessage::ResponseStatus_StatusCode >(code_);
}
inline void ResponseStatus::set_code(::LTMessage::ResponseStatus_StatusCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.ResponseStatus.code)
}

// string detail = 2;
inline void ResponseStatus::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseStatus::detail() const {
  // @@protoc_insertion_point(field_get:LTMessage.ResponseStatus.detail)
  return detail_.GetNoArena();
}
inline void ResponseStatus::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.ResponseStatus.detail)
}
#if LANG_CXX11
inline void ResponseStatus::set_detail(::std::string&& value) {
  
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.ResponseStatus.detail)
}
#endif
inline void ResponseStatus::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.ResponseStatus.detail)
}
inline void ResponseStatus::set_detail(const char* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.ResponseStatus.detail)
}
inline ::std::string* ResponseStatus::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.ResponseStatus.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseStatus::release_detail() {
  // @@protoc_insertion_point(field_release:LTMessage.ResponseStatus.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseStatus::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.ResponseStatus.detail)
}

// -------------------------------------------------------------------

// UpdateEvent

// .LTMessage.UpdateEvent.Event event = 1;
inline void UpdateEvent::clear_event() {
  event_ = 0;
}
inline ::LTMessage::UpdateEvent_Event UpdateEvent::event() const {
  // @@protoc_insertion_point(field_get:LTMessage.UpdateEvent.event)
  return static_cast< ::LTMessage::UpdateEvent_Event >(event_);
}
inline void UpdateEvent::set_event(::LTMessage::UpdateEvent_Event value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.UpdateEvent.event)
}

// string detail = 2;
inline void UpdateEvent::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateEvent::detail() const {
  // @@protoc_insertion_point(field_get:LTMessage.UpdateEvent.detail)
  return detail_.GetNoArena();
}
inline void UpdateEvent::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.UpdateEvent.detail)
}
#if LANG_CXX11
inline void UpdateEvent::set_detail(::std::string&& value) {
  
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.UpdateEvent.detail)
}
#endif
inline void UpdateEvent::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.UpdateEvent.detail)
}
inline void UpdateEvent::set_detail(const char* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.UpdateEvent.detail)
}
inline ::std::string* UpdateEvent::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.UpdateEvent.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateEvent::release_detail() {
  // @@protoc_insertion_point(field_release:LTMessage.UpdateEvent.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateEvent::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.UpdateEvent.detail)
}

// -------------------------------------------------------------------

// TerminalExceptStatus

// string mac_addr = 1;
inline void TerminalExceptStatus::clear_mac_addr() {
  mac_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminalExceptStatus::mac_addr() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalExceptStatus.mac_addr)
  return mac_addr_.GetNoArena();
}
inline void TerminalExceptStatus::set_mac_addr(const ::std::string& value) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.TerminalExceptStatus.mac_addr)
}
#if LANG_CXX11
inline void TerminalExceptStatus::set_mac_addr(::std::string&& value) {
  
  mac_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.TerminalExceptStatus.mac_addr)
}
#endif
inline void TerminalExceptStatus::set_mac_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.TerminalExceptStatus.mac_addr)
}
inline void TerminalExceptStatus::set_mac_addr(const char* value, size_t size) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.TerminalExceptStatus.mac_addr)
}
inline ::std::string* TerminalExceptStatus::mutable_mac_addr() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalExceptStatus.mac_addr)
  return mac_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminalExceptStatus::release_mac_addr() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalExceptStatus.mac_addr)
  
  return mac_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminalExceptStatus::set_allocated_mac_addr(::std::string* mac_addr) {
  if (mac_addr != NULL) {
    
  } else {
    
  }
  mac_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_addr);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalExceptStatus.mac_addr)
}

// bool data_hub_is_dead = 2;
inline void TerminalExceptStatus::clear_data_hub_is_dead() {
  data_hub_is_dead_ = false;
}
inline bool TerminalExceptStatus::data_hub_is_dead() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalExceptStatus.data_hub_is_dead)
  return data_hub_is_dead_;
}
inline void TerminalExceptStatus::set_data_hub_is_dead(bool value) {
  
  data_hub_is_dead_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalExceptStatus.data_hub_is_dead)
}

// bool loc_engine_is_dead = 3;
inline void TerminalExceptStatus::clear_loc_engine_is_dead() {
  loc_engine_is_dead_ = false;
}
inline bool TerminalExceptStatus::loc_engine_is_dead() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalExceptStatus.loc_engine_is_dead)
  return loc_engine_is_dead_;
}
inline void TerminalExceptStatus::set_loc_engine_is_dead(bool value) {
  
  loc_engine_is_dead_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalExceptStatus.loc_engine_is_dead)
}

// bool config_error = 4;
inline void TerminalExceptStatus::clear_config_error() {
  config_error_ = false;
}
inline bool TerminalExceptStatus::config_error() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalExceptStatus.config_error)
  return config_error_;
}
inline void TerminalExceptStatus::set_config_error(bool value) {
  
  config_error_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalExceptStatus.config_error)
}

// bool sensor_change = 5;
inline void TerminalExceptStatus::clear_sensor_change() {
  sensor_change_ = false;
}
inline bool TerminalExceptStatus::sensor_change() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalExceptStatus.sensor_change)
  return sensor_change_;
}
inline void TerminalExceptStatus::set_sensor_change(bool value) {
  
  sensor_change_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalExceptStatus.sensor_change)
}

// repeated string except_detail = 6;
inline int TerminalExceptStatus::except_detail_size() const {
  return except_detail_.size();
}
inline void TerminalExceptStatus::clear_except_detail() {
  except_detail_.Clear();
}
inline const ::std::string& TerminalExceptStatus::except_detail(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalExceptStatus.except_detail)
  return except_detail_.Get(index);
}
inline ::std::string* TerminalExceptStatus::mutable_except_detail(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalExceptStatus.except_detail)
  return except_detail_.Mutable(index);
}
inline void TerminalExceptStatus::set_except_detail(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:LTMessage.TerminalExceptStatus.except_detail)
  except_detail_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TerminalExceptStatus::set_except_detail(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:LTMessage.TerminalExceptStatus.except_detail)
  except_detail_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TerminalExceptStatus::set_except_detail(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  except_detail_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:LTMessage.TerminalExceptStatus.except_detail)
}
inline void TerminalExceptStatus::set_except_detail(int index, const char* value, size_t size) {
  except_detail_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LTMessage.TerminalExceptStatus.except_detail)
}
inline ::std::string* TerminalExceptStatus::add_except_detail() {
  // @@protoc_insertion_point(field_add_mutable:LTMessage.TerminalExceptStatus.except_detail)
  return except_detail_.Add();
}
inline void TerminalExceptStatus::add_except_detail(const ::std::string& value) {
  except_detail_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:LTMessage.TerminalExceptStatus.except_detail)
}
#if LANG_CXX11
inline void TerminalExceptStatus::add_except_detail(::std::string&& value) {
  except_detail_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:LTMessage.TerminalExceptStatus.except_detail)
}
#endif
inline void TerminalExceptStatus::add_except_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  except_detail_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:LTMessage.TerminalExceptStatus.except_detail)
}
inline void TerminalExceptStatus::add_except_detail(const char* value, size_t size) {
  except_detail_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:LTMessage.TerminalExceptStatus.except_detail)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TerminalExceptStatus::except_detail() const {
  // @@protoc_insertion_point(field_list:LTMessage.TerminalExceptStatus.except_detail)
  return except_detail_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TerminalExceptStatus::mutable_except_detail() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.TerminalExceptStatus.except_detail)
  return &except_detail_;
}

// string data_hub_check_info = 7;
inline void TerminalExceptStatus::clear_data_hub_check_info() {
  data_hub_check_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminalExceptStatus::data_hub_check_info() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalExceptStatus.data_hub_check_info)
  return data_hub_check_info_.GetNoArena();
}
inline void TerminalExceptStatus::set_data_hub_check_info(const ::std::string& value) {
  
  data_hub_check_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.TerminalExceptStatus.data_hub_check_info)
}
#if LANG_CXX11
inline void TerminalExceptStatus::set_data_hub_check_info(::std::string&& value) {
  
  data_hub_check_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.TerminalExceptStatus.data_hub_check_info)
}
#endif
inline void TerminalExceptStatus::set_data_hub_check_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_hub_check_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.TerminalExceptStatus.data_hub_check_info)
}
inline void TerminalExceptStatus::set_data_hub_check_info(const char* value, size_t size) {
  
  data_hub_check_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.TerminalExceptStatus.data_hub_check_info)
}
inline ::std::string* TerminalExceptStatus::mutable_data_hub_check_info() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalExceptStatus.data_hub_check_info)
  return data_hub_check_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminalExceptStatus::release_data_hub_check_info() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalExceptStatus.data_hub_check_info)
  
  return data_hub_check_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminalExceptStatus::set_allocated_data_hub_check_info(::std::string* data_hub_check_info) {
  if (data_hub_check_info != NULL) {
    
  } else {
    
  }
  data_hub_check_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_hub_check_info);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalExceptStatus.data_hub_check_info)
}

// string loc_engine_check_info = 8;
inline void TerminalExceptStatus::clear_loc_engine_check_info() {
  loc_engine_check_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminalExceptStatus::loc_engine_check_info() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalExceptStatus.loc_engine_check_info)
  return loc_engine_check_info_.GetNoArena();
}
inline void TerminalExceptStatus::set_loc_engine_check_info(const ::std::string& value) {
  
  loc_engine_check_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.TerminalExceptStatus.loc_engine_check_info)
}
#if LANG_CXX11
inline void TerminalExceptStatus::set_loc_engine_check_info(::std::string&& value) {
  
  loc_engine_check_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.TerminalExceptStatus.loc_engine_check_info)
}
#endif
inline void TerminalExceptStatus::set_loc_engine_check_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  loc_engine_check_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.TerminalExceptStatus.loc_engine_check_info)
}
inline void TerminalExceptStatus::set_loc_engine_check_info(const char* value, size_t size) {
  
  loc_engine_check_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.TerminalExceptStatus.loc_engine_check_info)
}
inline ::std::string* TerminalExceptStatus::mutable_loc_engine_check_info() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalExceptStatus.loc_engine_check_info)
  return loc_engine_check_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminalExceptStatus::release_loc_engine_check_info() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalExceptStatus.loc_engine_check_info)
  
  return loc_engine_check_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminalExceptStatus::set_allocated_loc_engine_check_info(::std::string* loc_engine_check_info) {
  if (loc_engine_check_info != NULL) {
    
  } else {
    
  }
  loc_engine_check_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loc_engine_check_info);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalExceptStatus.loc_engine_check_info)
}

// -------------------------------------------------------------------

// BasesExceptStatus

// string chip_id = 1;
inline void BasesExceptStatus::clear_chip_id() {
  chip_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BasesExceptStatus::chip_id() const {
  // @@protoc_insertion_point(field_get:LTMessage.BasesExceptStatus.chip_id)
  return chip_id_.GetNoArena();
}
inline void BasesExceptStatus::set_chip_id(const ::std::string& value) {
  
  chip_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.BasesExceptStatus.chip_id)
}
#if LANG_CXX11
inline void BasesExceptStatus::set_chip_id(::std::string&& value) {
  
  chip_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.BasesExceptStatus.chip_id)
}
#endif
inline void BasesExceptStatus::set_chip_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chip_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.BasesExceptStatus.chip_id)
}
inline void BasesExceptStatus::set_chip_id(const char* value, size_t size) {
  
  chip_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.BasesExceptStatus.chip_id)
}
inline ::std::string* BasesExceptStatus::mutable_chip_id() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.BasesExceptStatus.chip_id)
  return chip_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BasesExceptStatus::release_chip_id() {
  // @@protoc_insertion_point(field_release:LTMessage.BasesExceptStatus.chip_id)
  
  return chip_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BasesExceptStatus::set_allocated_chip_id(::std::string* chip_id) {
  if (chip_id != NULL) {
    
  } else {
    
  }
  chip_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chip_id);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BasesExceptStatus.chip_id)
}

// repeated string except_detail = 2;
inline int BasesExceptStatus::except_detail_size() const {
  return except_detail_.size();
}
inline void BasesExceptStatus::clear_except_detail() {
  except_detail_.Clear();
}
inline const ::std::string& BasesExceptStatus::except_detail(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.BasesExceptStatus.except_detail)
  return except_detail_.Get(index);
}
inline ::std::string* BasesExceptStatus::mutable_except_detail(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.BasesExceptStatus.except_detail)
  return except_detail_.Mutable(index);
}
inline void BasesExceptStatus::set_except_detail(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:LTMessage.BasesExceptStatus.except_detail)
  except_detail_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BasesExceptStatus::set_except_detail(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:LTMessage.BasesExceptStatus.except_detail)
  except_detail_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BasesExceptStatus::set_except_detail(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  except_detail_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:LTMessage.BasesExceptStatus.except_detail)
}
inline void BasesExceptStatus::set_except_detail(int index, const char* value, size_t size) {
  except_detail_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LTMessage.BasesExceptStatus.except_detail)
}
inline ::std::string* BasesExceptStatus::add_except_detail() {
  // @@protoc_insertion_point(field_add_mutable:LTMessage.BasesExceptStatus.except_detail)
  return except_detail_.Add();
}
inline void BasesExceptStatus::add_except_detail(const ::std::string& value) {
  except_detail_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:LTMessage.BasesExceptStatus.except_detail)
}
#if LANG_CXX11
inline void BasesExceptStatus::add_except_detail(::std::string&& value) {
  except_detail_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:LTMessage.BasesExceptStatus.except_detail)
}
#endif
inline void BasesExceptStatus::add_except_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  except_detail_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:LTMessage.BasesExceptStatus.except_detail)
}
inline void BasesExceptStatus::add_except_detail(const char* value, size_t size) {
  except_detail_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:LTMessage.BasesExceptStatus.except_detail)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BasesExceptStatus::except_detail() const {
  // @@protoc_insertion_point(field_list:LTMessage.BasesExceptStatus.except_detail)
  return except_detail_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BasesExceptStatus::mutable_except_detail() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.BasesExceptStatus.except_detail)
  return &except_detail_;
}

// -------------------------------------------------------------------

// TerminalProperty_Sensor

// int32 index = 1;
inline void TerminalProperty_Sensor::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 TerminalProperty_Sensor::index() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.Sensor.index)
  return index_;
}
inline void TerminalProperty_Sensor::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalProperty.Sensor.index)
}

// int32 active = 2;
inline void TerminalProperty_Sensor::clear_active() {
  active_ = 0;
}
inline ::google::protobuf::int32 TerminalProperty_Sensor::active() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.Sensor.active)
  return active_;
}
inline void TerminalProperty_Sensor::set_active(::google::protobuf::int32 value) {
  
  active_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalProperty.Sensor.active)
}

// double height = 3;
inline void TerminalProperty_Sensor::clear_height() {
  height_ = 0;
}
inline double TerminalProperty_Sensor::height() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.Sensor.height)
  return height_;
}
inline void TerminalProperty_Sensor::set_height(double value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalProperty.Sensor.height)
}

// .LTMessage.PointXYZ coordinates = 4;
inline bool TerminalProperty_Sensor::has_coordinates() const {
  return this != internal_default_instance() && coordinates_ != NULL;
}
inline void TerminalProperty_Sensor::clear_coordinates() {
  if (GetArenaNoVirtual() == NULL && coordinates_ != NULL) {
    delete coordinates_;
  }
  coordinates_ = NULL;
}
inline const ::LTMessage::PointXYZ& TerminalProperty_Sensor::coordinates() const {
  const ::LTMessage::PointXYZ* p = coordinates_;
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.Sensor.coordinates)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::PointXYZ*>(
      &::LTMessage::_PointXYZ_default_instance_);
}
inline ::LTMessage::PointXYZ* TerminalProperty_Sensor::release_coordinates() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalProperty.Sensor.coordinates)
  
  ::LTMessage::PointXYZ* temp = coordinates_;
  coordinates_ = NULL;
  return temp;
}
inline ::LTMessage::PointXYZ* TerminalProperty_Sensor::mutable_coordinates() {
  
  if (coordinates_ == NULL) {
    coordinates_ = new ::LTMessage::PointXYZ;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalProperty.Sensor.coordinates)
  return coordinates_;
}
inline void TerminalProperty_Sensor::set_allocated_coordinates(::LTMessage::PointXYZ* coordinates) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete coordinates_;
  }
  if (coordinates) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coordinates = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinates, submessage_arena);
    }
    
  } else {
    
  }
  coordinates_ = coordinates;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalProperty.Sensor.coordinates)
}

// -------------------------------------------------------------------

// TerminalProperty

// string host_name = 1;
inline void TerminalProperty::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminalProperty::host_name() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.host_name)
  return host_name_.GetNoArena();
}
inline void TerminalProperty::set_host_name(const ::std::string& value) {
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.TerminalProperty.host_name)
}
#if LANG_CXX11
inline void TerminalProperty::set_host_name(::std::string&& value) {
  
  host_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.TerminalProperty.host_name)
}
#endif
inline void TerminalProperty::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.TerminalProperty.host_name)
}
inline void TerminalProperty::set_host_name(const char* value, size_t size) {
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.TerminalProperty.host_name)
}
inline ::std::string* TerminalProperty::mutable_host_name() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalProperty.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminalProperty::release_host_name() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalProperty.host_name)
  
  return host_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminalProperty::set_allocated_host_name(::std::string* host_name) {
  if (host_name != NULL) {
    
  } else {
    
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalProperty.host_name)
}

// string mac_addr = 2;
inline void TerminalProperty::clear_mac_addr() {
  mac_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminalProperty::mac_addr() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.mac_addr)
  return mac_addr_.GetNoArena();
}
inline void TerminalProperty::set_mac_addr(const ::std::string& value) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.TerminalProperty.mac_addr)
}
#if LANG_CXX11
inline void TerminalProperty::set_mac_addr(::std::string&& value) {
  
  mac_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.TerminalProperty.mac_addr)
}
#endif
inline void TerminalProperty::set_mac_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.TerminalProperty.mac_addr)
}
inline void TerminalProperty::set_mac_addr(const char* value, size_t size) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.TerminalProperty.mac_addr)
}
inline ::std::string* TerminalProperty::mutable_mac_addr() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalProperty.mac_addr)
  return mac_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminalProperty::release_mac_addr() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalProperty.mac_addr)
  
  return mac_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminalProperty::set_allocated_mac_addr(::std::string* mac_addr) {
  if (mac_addr != NULL) {
    
  } else {
    
  }
  mac_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_addr);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalProperty.mac_addr)
}

// string ip_addr = 3;
inline void TerminalProperty::clear_ip_addr() {
  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminalProperty::ip_addr() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.ip_addr)
  return ip_addr_.GetNoArena();
}
inline void TerminalProperty::set_ip_addr(const ::std::string& value) {
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.TerminalProperty.ip_addr)
}
#if LANG_CXX11
inline void TerminalProperty::set_ip_addr(::std::string&& value) {
  
  ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.TerminalProperty.ip_addr)
}
#endif
inline void TerminalProperty::set_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.TerminalProperty.ip_addr)
}
inline void TerminalProperty::set_ip_addr(const char* value, size_t size) {
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.TerminalProperty.ip_addr)
}
inline ::std::string* TerminalProperty::mutable_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalProperty.ip_addr)
  return ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminalProperty::release_ip_addr() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalProperty.ip_addr)
  
  return ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminalProperty::set_allocated_ip_addr(::std::string* ip_addr) {
  if (ip_addr != NULL) {
    
  } else {
    
  }
  ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_addr);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalProperty.ip_addr)
}

// repeated .LTMessage.TerminalProperty.Sensor sensor_list = 4;
inline int TerminalProperty::sensor_list_size() const {
  return sensor_list_.size();
}
inline void TerminalProperty::clear_sensor_list() {
  sensor_list_.Clear();
}
inline const ::LTMessage::TerminalProperty_Sensor& TerminalProperty::sensor_list(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.sensor_list)
  return sensor_list_.Get(index);
}
inline ::LTMessage::TerminalProperty_Sensor* TerminalProperty::mutable_sensor_list(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalProperty.sensor_list)
  return sensor_list_.Mutable(index);
}
inline ::LTMessage::TerminalProperty_Sensor* TerminalProperty::add_sensor_list() {
  // @@protoc_insertion_point(field_add:LTMessage.TerminalProperty.sensor_list)
  return sensor_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty_Sensor >*
TerminalProperty::mutable_sensor_list() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.TerminalProperty.sensor_list)
  return &sensor_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty_Sensor >&
TerminalProperty::sensor_list() const {
  // @@protoc_insertion_point(field_list:LTMessage.TerminalProperty.sensor_list)
  return sensor_list_;
}

// repeated string report_ip_addr = 5;
inline int TerminalProperty::report_ip_addr_size() const {
  return report_ip_addr_.size();
}
inline void TerminalProperty::clear_report_ip_addr() {
  report_ip_addr_.Clear();
}
inline const ::std::string& TerminalProperty::report_ip_addr(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.report_ip_addr)
  return report_ip_addr_.Get(index);
}
inline ::std::string* TerminalProperty::mutable_report_ip_addr(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalProperty.report_ip_addr)
  return report_ip_addr_.Mutable(index);
}
inline void TerminalProperty::set_report_ip_addr(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:LTMessage.TerminalProperty.report_ip_addr)
  report_ip_addr_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TerminalProperty::set_report_ip_addr(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:LTMessage.TerminalProperty.report_ip_addr)
  report_ip_addr_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TerminalProperty::set_report_ip_addr(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  report_ip_addr_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:LTMessage.TerminalProperty.report_ip_addr)
}
inline void TerminalProperty::set_report_ip_addr(int index, const char* value, size_t size) {
  report_ip_addr_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:LTMessage.TerminalProperty.report_ip_addr)
}
inline ::std::string* TerminalProperty::add_report_ip_addr() {
  // @@protoc_insertion_point(field_add_mutable:LTMessage.TerminalProperty.report_ip_addr)
  return report_ip_addr_.Add();
}
inline void TerminalProperty::add_report_ip_addr(const ::std::string& value) {
  report_ip_addr_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:LTMessage.TerminalProperty.report_ip_addr)
}
#if LANG_CXX11
inline void TerminalProperty::add_report_ip_addr(::std::string&& value) {
  report_ip_addr_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:LTMessage.TerminalProperty.report_ip_addr)
}
#endif
inline void TerminalProperty::add_report_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  report_ip_addr_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:LTMessage.TerminalProperty.report_ip_addr)
}
inline void TerminalProperty::add_report_ip_addr(const char* value, size_t size) {
  report_ip_addr_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:LTMessage.TerminalProperty.report_ip_addr)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TerminalProperty::report_ip_addr() const {
  // @@protoc_insertion_point(field_list:LTMessage.TerminalProperty.report_ip_addr)
  return report_ip_addr_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TerminalProperty::mutable_report_ip_addr() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.TerminalProperty.report_ip_addr)
  return &report_ip_addr_;
}

// repeated int32 report_tcp_port = 6;
inline int TerminalProperty::report_tcp_port_size() const {
  return report_tcp_port_.size();
}
inline void TerminalProperty::clear_report_tcp_port() {
  report_tcp_port_.Clear();
}
inline ::google::protobuf::int32 TerminalProperty::report_tcp_port(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalProperty.report_tcp_port)
  return report_tcp_port_.Get(index);
}
inline void TerminalProperty::set_report_tcp_port(int index, ::google::protobuf::int32 value) {
  report_tcp_port_.Set(index, value);
  // @@protoc_insertion_point(field_set:LTMessage.TerminalProperty.report_tcp_port)
}
inline void TerminalProperty::add_report_tcp_port(::google::protobuf::int32 value) {
  report_tcp_port_.Add(value);
  // @@protoc_insertion_point(field_add:LTMessage.TerminalProperty.report_tcp_port)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TerminalProperty::report_tcp_port() const {
  // @@protoc_insertion_point(field_list:LTMessage.TerminalProperty.report_tcp_port)
  return report_tcp_port_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TerminalProperty::mutable_report_tcp_port() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.TerminalProperty.report_tcp_port)
  return &report_tcp_port_;
}

// -------------------------------------------------------------------

// BaseStationProperty_Pose

// double pitch = 1;
inline void BaseStationProperty_Pose::clear_pitch() {
  pitch_ = 0;
}
inline double BaseStationProperty_Pose::pitch() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.Pose.pitch)
  return pitch_;
}
inline void BaseStationProperty_Pose::set_pitch(double value) {
  
  pitch_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.Pose.pitch)
}

// double roll = 2;
inline void BaseStationProperty_Pose::clear_roll() {
  roll_ = 0;
}
inline double BaseStationProperty_Pose::roll() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.Pose.roll)
  return roll_;
}
inline void BaseStationProperty_Pose::set_roll(double value) {
  
  roll_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.Pose.roll)
}

// double yaw = 3;
inline void BaseStationProperty_Pose::clear_yaw() {
  yaw_ = 0;
}
inline double BaseStationProperty_Pose::yaw() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.Pose.yaw)
  return yaw_;
}
inline void BaseStationProperty_Pose::set_yaw(double value) {
  
  yaw_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.Pose.yaw)
}

// -------------------------------------------------------------------

// BaseStationProperty

// string chip_id = 1;
inline void BaseStationProperty::clear_chip_id() {
  chip_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BaseStationProperty::chip_id() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.chip_id)
  return chip_id_.GetNoArena();
}
inline void BaseStationProperty::set_chip_id(const ::std::string& value) {
  
  chip_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.chip_id)
}
#if LANG_CXX11
inline void BaseStationProperty::set_chip_id(::std::string&& value) {
  
  chip_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.BaseStationProperty.chip_id)
}
#endif
inline void BaseStationProperty::set_chip_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chip_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.BaseStationProperty.chip_id)
}
inline void BaseStationProperty::set_chip_id(const char* value, size_t size) {
  
  chip_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.BaseStationProperty.chip_id)
}
inline ::std::string* BaseStationProperty::mutable_chip_id() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationProperty.chip_id)
  return chip_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaseStationProperty::release_chip_id() {
  // @@protoc_insertion_point(field_release:LTMessage.BaseStationProperty.chip_id)
  
  return chip_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaseStationProperty::set_allocated_chip_id(::std::string* chip_id) {
  if (chip_id != NULL) {
    
  } else {
    
  }
  chip_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chip_id);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BaseStationProperty.chip_id)
}

// int32 bs_id = 2;
inline void BaseStationProperty::clear_bs_id() {
  bs_id_ = 0;
}
inline ::google::protobuf::int32 BaseStationProperty::bs_id() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.bs_id)
  return bs_id_;
}
inline void BaseStationProperty::set_bs_id(::google::protobuf::int32 value) {
  
  bs_id_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.bs_id)
}

// string host_name = 3;
inline void BaseStationProperty::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BaseStationProperty::host_name() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.host_name)
  return host_name_.GetNoArena();
}
inline void BaseStationProperty::set_host_name(const ::std::string& value) {
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.host_name)
}
#if LANG_CXX11
inline void BaseStationProperty::set_host_name(::std::string&& value) {
  
  host_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.BaseStationProperty.host_name)
}
#endif
inline void BaseStationProperty::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.BaseStationProperty.host_name)
}
inline void BaseStationProperty::set_host_name(const char* value, size_t size) {
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.BaseStationProperty.host_name)
}
inline ::std::string* BaseStationProperty::mutable_host_name() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationProperty.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaseStationProperty::release_host_name() {
  // @@protoc_insertion_point(field_release:LTMessage.BaseStationProperty.host_name)
  
  return host_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaseStationProperty::set_allocated_host_name(::std::string* host_name) {
  if (host_name != NULL) {
    
  } else {
    
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BaseStationProperty.host_name)
}

// int32 ingroup_addr = 4;
inline void BaseStationProperty::clear_ingroup_addr() {
  ingroup_addr_ = 0;
}
inline ::google::protobuf::int32 BaseStationProperty::ingroup_addr() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.ingroup_addr)
  return ingroup_addr_;
}
inline void BaseStationProperty::set_ingroup_addr(::google::protobuf::int32 value) {
  
  ingroup_addr_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.ingroup_addr)
}

// int32 frequency = 5;
inline void BaseStationProperty::clear_frequency() {
  frequency_ = 0;
}
inline ::google::protobuf::int32 BaseStationProperty::frequency() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.frequency)
  return frequency_;
}
inline void BaseStationProperty::set_frequency(::google::protobuf::int32 value) {
  
  frequency_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.frequency)
}

// double start_angle = 6;
inline void BaseStationProperty::clear_start_angle() {
  start_angle_ = 0;
}
inline double BaseStationProperty::start_angle() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.start_angle)
  return start_angle_;
}
inline void BaseStationProperty::set_start_angle(double value) {
  
  start_angle_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.start_angle)
}

// .LTMessage.PointXYZ coordinates = 7;
inline bool BaseStationProperty::has_coordinates() const {
  return this != internal_default_instance() && coordinates_ != NULL;
}
inline void BaseStationProperty::clear_coordinates() {
  if (GetArenaNoVirtual() == NULL && coordinates_ != NULL) {
    delete coordinates_;
  }
  coordinates_ = NULL;
}
inline const ::LTMessage::PointXYZ& BaseStationProperty::coordinates() const {
  const ::LTMessage::PointXYZ* p = coordinates_;
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.coordinates)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::PointXYZ*>(
      &::LTMessage::_PointXYZ_default_instance_);
}
inline ::LTMessage::PointXYZ* BaseStationProperty::release_coordinates() {
  // @@protoc_insertion_point(field_release:LTMessage.BaseStationProperty.coordinates)
  
  ::LTMessage::PointXYZ* temp = coordinates_;
  coordinates_ = NULL;
  return temp;
}
inline ::LTMessage::PointXYZ* BaseStationProperty::mutable_coordinates() {
  
  if (coordinates_ == NULL) {
    coordinates_ = new ::LTMessage::PointXYZ;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationProperty.coordinates)
  return coordinates_;
}
inline void BaseStationProperty::set_allocated_coordinates(::LTMessage::PointXYZ* coordinates) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete coordinates_;
  }
  if (coordinates) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coordinates = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinates, submessage_arena);
    }
    
  } else {
    
  }
  coordinates_ = coordinates;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BaseStationProperty.coordinates)
}

// .LTMessage.BaseStationProperty.Pose orientation = 8;
inline bool BaseStationProperty::has_orientation() const {
  return this != internal_default_instance() && orientation_ != NULL;
}
inline void BaseStationProperty::clear_orientation() {
  if (GetArenaNoVirtual() == NULL && orientation_ != NULL) {
    delete orientation_;
  }
  orientation_ = NULL;
}
inline const ::LTMessage::BaseStationProperty_Pose& BaseStationProperty::orientation() const {
  const ::LTMessage::BaseStationProperty_Pose* p = orientation_;
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.orientation)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::BaseStationProperty_Pose*>(
      &::LTMessage::_BaseStationProperty_Pose_default_instance_);
}
inline ::LTMessage::BaseStationProperty_Pose* BaseStationProperty::release_orientation() {
  // @@protoc_insertion_point(field_release:LTMessage.BaseStationProperty.orientation)
  
  ::LTMessage::BaseStationProperty_Pose* temp = orientation_;
  orientation_ = NULL;
  return temp;
}
inline ::LTMessage::BaseStationProperty_Pose* BaseStationProperty::mutable_orientation() {
  
  if (orientation_ == NULL) {
    orientation_ = new ::LTMessage::BaseStationProperty_Pose;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationProperty.orientation)
  return orientation_;
}
inline void BaseStationProperty::set_allocated_orientation(::LTMessage::BaseStationProperty_Pose* orientation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete orientation_;
  }
  if (orientation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      orientation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, orientation, submessage_arena);
    }
    
  } else {
    
  }
  orientation_ = orientation;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BaseStationProperty.orientation)
}

// int32 led_status = 9;
inline void BaseStationProperty::clear_led_status() {
  led_status_ = 0;
}
inline ::google::protobuf::int32 BaseStationProperty::led_status() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.led_status)
  return led_status_;
}
inline void BaseStationProperty::set_led_status(::google::protobuf::int32 value) {
  
  led_status_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.led_status)
}

// double motor_speed = 10;
inline void BaseStationProperty::clear_motor_speed() {
  motor_speed_ = 0;
}
inline double BaseStationProperty::motor_speed() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationProperty.motor_speed)
  return motor_speed_;
}
inline void BaseStationProperty::set_motor_speed(double value) {
  
  motor_speed_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationProperty.motor_speed)
}

// -------------------------------------------------------------------

// TerminalPropertyRequest

// .LTMessage.TerminalPropertyRequest.RequestType type = 1;
inline void TerminalPropertyRequest::clear_type() {
  type_ = 0;
}
inline ::LTMessage::TerminalPropertyRequest_RequestType TerminalPropertyRequest::type() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalPropertyRequest.type)
  return static_cast< ::LTMessage::TerminalPropertyRequest_RequestType >(type_);
}
inline void TerminalPropertyRequest::set_type(::LTMessage::TerminalPropertyRequest_RequestType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalPropertyRequest.type)
}

// repeated .LTMessage.TerminalProperty terminal_list = 2;
inline int TerminalPropertyRequest::terminal_list_size() const {
  return terminal_list_.size();
}
inline void TerminalPropertyRequest::clear_terminal_list() {
  terminal_list_.Clear();
}
inline const ::LTMessage::TerminalProperty& TerminalPropertyRequest::terminal_list(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalPropertyRequest.terminal_list)
  return terminal_list_.Get(index);
}
inline ::LTMessage::TerminalProperty* TerminalPropertyRequest::mutable_terminal_list(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalPropertyRequest.terminal_list)
  return terminal_list_.Mutable(index);
}
inline ::LTMessage::TerminalProperty* TerminalPropertyRequest::add_terminal_list() {
  // @@protoc_insertion_point(field_add:LTMessage.TerminalPropertyRequest.terminal_list)
  return terminal_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >*
TerminalPropertyRequest::mutable_terminal_list() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.TerminalPropertyRequest.terminal_list)
  return &terminal_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >&
TerminalPropertyRequest::terminal_list() const {
  // @@protoc_insertion_point(field_list:LTMessage.TerminalPropertyRequest.terminal_list)
  return terminal_list_;
}

// -------------------------------------------------------------------

// TerminalPropertyResponse

// .LTMessage.ResponseStatus status = 1;
inline bool TerminalPropertyResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void TerminalPropertyResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::LTMessage::ResponseStatus& TerminalPropertyResponse::status() const {
  const ::LTMessage::ResponseStatus* p = status_;
  // @@protoc_insertion_point(field_get:LTMessage.TerminalPropertyResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::ResponseStatus*>(
      &::LTMessage::_ResponseStatus_default_instance_);
}
inline ::LTMessage::ResponseStatus* TerminalPropertyResponse::release_status() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalPropertyResponse.status)
  
  ::LTMessage::ResponseStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::LTMessage::ResponseStatus* TerminalPropertyResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::LTMessage::ResponseStatus;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalPropertyResponse.status)
  return status_;
}
inline void TerminalPropertyResponse::set_allocated_status(::LTMessage::ResponseStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalPropertyResponse.status)
}

// repeated .LTMessage.TerminalProperty terminal_list = 2;
inline int TerminalPropertyResponse::terminal_list_size() const {
  return terminal_list_.size();
}
inline void TerminalPropertyResponse::clear_terminal_list() {
  terminal_list_.Clear();
}
inline const ::LTMessage::TerminalProperty& TerminalPropertyResponse::terminal_list(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalPropertyResponse.terminal_list)
  return terminal_list_.Get(index);
}
inline ::LTMessage::TerminalProperty* TerminalPropertyResponse::mutable_terminal_list(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalPropertyResponse.terminal_list)
  return terminal_list_.Mutable(index);
}
inline ::LTMessage::TerminalProperty* TerminalPropertyResponse::add_terminal_list() {
  // @@protoc_insertion_point(field_add:LTMessage.TerminalPropertyResponse.terminal_list)
  return terminal_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >*
TerminalPropertyResponse::mutable_terminal_list() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.TerminalPropertyResponse.terminal_list)
  return &terminal_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >&
TerminalPropertyResponse::terminal_list() const {
  // @@protoc_insertion_point(field_list:LTMessage.TerminalPropertyResponse.terminal_list)
  return terminal_list_;
}

// -------------------------------------------------------------------

// TerminalActionRequest

// int32 sequence = 1;
inline void TerminalActionRequest::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 TerminalActionRequest::sequence() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalActionRequest.sequence)
  return sequence_;
}
inline void TerminalActionRequest::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalActionRequest.sequence)
}

// .LTMessage.TerminalActionRequest.RequestType type = 2;
inline void TerminalActionRequest::clear_type() {
  type_ = 0;
}
inline ::LTMessage::TerminalActionRequest_RequestType TerminalActionRequest::type() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalActionRequest.type)
  return static_cast< ::LTMessage::TerminalActionRequest_RequestType >(type_);
}
inline void TerminalActionRequest::set_type(::LTMessage::TerminalActionRequest_RequestType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalActionRequest.type)
}

// string update_url = 3;
inline void TerminalActionRequest::clear_update_url() {
  update_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TerminalActionRequest::update_url() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalActionRequest.update_url)
  return update_url_.GetNoArena();
}
inline void TerminalActionRequest::set_update_url(const ::std::string& value) {
  
  update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.TerminalActionRequest.update_url)
}
#if LANG_CXX11
inline void TerminalActionRequest::set_update_url(::std::string&& value) {
  
  update_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.TerminalActionRequest.update_url)
}
#endif
inline void TerminalActionRequest::set_update_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.TerminalActionRequest.update_url)
}
inline void TerminalActionRequest::set_update_url(const char* value, size_t size) {
  
  update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.TerminalActionRequest.update_url)
}
inline ::std::string* TerminalActionRequest::mutable_update_url() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalActionRequest.update_url)
  return update_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TerminalActionRequest::release_update_url() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalActionRequest.update_url)
  
  return update_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TerminalActionRequest::set_allocated_update_url(::std::string* update_url) {
  if (update_url != NULL) {
    
  } else {
    
  }
  update_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), update_url);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalActionRequest.update_url)
}

// repeated .LTMessage.TerminalProperty terminal_list = 4;
inline int TerminalActionRequest::terminal_list_size() const {
  return terminal_list_.size();
}
inline void TerminalActionRequest::clear_terminal_list() {
  terminal_list_.Clear();
}
inline const ::LTMessage::TerminalProperty& TerminalActionRequest::terminal_list(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalActionRequest.terminal_list)
  return terminal_list_.Get(index);
}
inline ::LTMessage::TerminalProperty* TerminalActionRequest::mutable_terminal_list(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalActionRequest.terminal_list)
  return terminal_list_.Mutable(index);
}
inline ::LTMessage::TerminalProperty* TerminalActionRequest::add_terminal_list() {
  // @@protoc_insertion_point(field_add:LTMessage.TerminalActionRequest.terminal_list)
  return terminal_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >*
TerminalActionRequest::mutable_terminal_list() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.TerminalActionRequest.terminal_list)
  return &terminal_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalProperty >&
TerminalActionRequest::terminal_list() const {
  // @@protoc_insertion_point(field_list:LTMessage.TerminalActionRequest.terminal_list)
  return terminal_list_;
}

// -------------------------------------------------------------------

// TerminalActionResponse

// int32 sequence = 1;
inline void TerminalActionResponse::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 TerminalActionResponse::sequence() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalActionResponse.sequence)
  return sequence_;
}
inline void TerminalActionResponse::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalActionResponse.sequence)
}

// .LTMessage.ResponseStatus status = 2;
inline bool TerminalActionResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void TerminalActionResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::LTMessage::ResponseStatus& TerminalActionResponse::status() const {
  const ::LTMessage::ResponseStatus* p = status_;
  // @@protoc_insertion_point(field_get:LTMessage.TerminalActionResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::ResponseStatus*>(
      &::LTMessage::_ResponseStatus_default_instance_);
}
inline ::LTMessage::ResponseStatus* TerminalActionResponse::release_status() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalActionResponse.status)
  
  ::LTMessage::ResponseStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::LTMessage::ResponseStatus* TerminalActionResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::LTMessage::ResponseStatus;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalActionResponse.status)
  return status_;
}
inline void TerminalActionResponse::set_allocated_status(::LTMessage::ResponseStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalActionResponse.status)
}

// -------------------------------------------------------------------

// BaseStationPropertyRequest

// .LTMessage.BaseStationPropertyRequest.RequestType type = 1;
inline void BaseStationPropertyRequest::clear_type() {
  type_ = 0;
}
inline ::LTMessage::BaseStationPropertyRequest_RequestType BaseStationPropertyRequest::type() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationPropertyRequest.type)
  return static_cast< ::LTMessage::BaseStationPropertyRequest_RequestType >(type_);
}
inline void BaseStationPropertyRequest::set_type(::LTMessage::BaseStationPropertyRequest_RequestType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationPropertyRequest.type)
}

// repeated .LTMessage.BaseStationProperty base_station_list = 2;
inline int BaseStationPropertyRequest::base_station_list_size() const {
  return base_station_list_.size();
}
inline void BaseStationPropertyRequest::clear_base_station_list() {
  base_station_list_.Clear();
}
inline const ::LTMessage::BaseStationProperty& BaseStationPropertyRequest::base_station_list(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationPropertyRequest.base_station_list)
  return base_station_list_.Get(index);
}
inline ::LTMessage::BaseStationProperty* BaseStationPropertyRequest::mutable_base_station_list(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationPropertyRequest.base_station_list)
  return base_station_list_.Mutable(index);
}
inline ::LTMessage::BaseStationProperty* BaseStationPropertyRequest::add_base_station_list() {
  // @@protoc_insertion_point(field_add:LTMessage.BaseStationPropertyRequest.base_station_list)
  return base_station_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty >*
BaseStationPropertyRequest::mutable_base_station_list() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.BaseStationPropertyRequest.base_station_list)
  return &base_station_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty >&
BaseStationPropertyRequest::base_station_list() const {
  // @@protoc_insertion_point(field_list:LTMessage.BaseStationPropertyRequest.base_station_list)
  return base_station_list_;
}

// -------------------------------------------------------------------

// BaseStationPropertyResponse

// .LTMessage.ResponseStatus status = 1;
inline bool BaseStationPropertyResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void BaseStationPropertyResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::LTMessage::ResponseStatus& BaseStationPropertyResponse::status() const {
  const ::LTMessage::ResponseStatus* p = status_;
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationPropertyResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::ResponseStatus*>(
      &::LTMessage::_ResponseStatus_default_instance_);
}
inline ::LTMessage::ResponseStatus* BaseStationPropertyResponse::release_status() {
  // @@protoc_insertion_point(field_release:LTMessage.BaseStationPropertyResponse.status)
  
  ::LTMessage::ResponseStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::LTMessage::ResponseStatus* BaseStationPropertyResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::LTMessage::ResponseStatus;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationPropertyResponse.status)
  return status_;
}
inline void BaseStationPropertyResponse::set_allocated_status(::LTMessage::ResponseStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BaseStationPropertyResponse.status)
}

// repeated .LTMessage.BaseStationProperty base_station_list = 2;
inline int BaseStationPropertyResponse::base_station_list_size() const {
  return base_station_list_.size();
}
inline void BaseStationPropertyResponse::clear_base_station_list() {
  base_station_list_.Clear();
}
inline const ::LTMessage::BaseStationProperty& BaseStationPropertyResponse::base_station_list(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationPropertyResponse.base_station_list)
  return base_station_list_.Get(index);
}
inline ::LTMessage::BaseStationProperty* BaseStationPropertyResponse::mutable_base_station_list(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationPropertyResponse.base_station_list)
  return base_station_list_.Mutable(index);
}
inline ::LTMessage::BaseStationProperty* BaseStationPropertyResponse::add_base_station_list() {
  // @@protoc_insertion_point(field_add:LTMessage.BaseStationPropertyResponse.base_station_list)
  return base_station_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty >*
BaseStationPropertyResponse::mutable_base_station_list() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.BaseStationPropertyResponse.base_station_list)
  return &base_station_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTMessage::BaseStationProperty >&
BaseStationPropertyResponse::base_station_list() const {
  // @@protoc_insertion_point(field_list:LTMessage.BaseStationPropertyResponse.base_station_list)
  return base_station_list_;
}

// -------------------------------------------------------------------

// BaseStationActionRequest

// int32 sequence = 1;
inline void BaseStationActionRequest::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 BaseStationActionRequest::sequence() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationActionRequest.sequence)
  return sequence_;
}
inline void BaseStationActionRequest::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationActionRequest.sequence)
}

// string command = 2;
inline void BaseStationActionRequest::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BaseStationActionRequest::command() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationActionRequest.command)
  return command_.GetNoArena();
}
inline void BaseStationActionRequest::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationActionRequest.command)
}
#if LANG_CXX11
inline void BaseStationActionRequest::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.BaseStationActionRequest.command)
}
#endif
inline void BaseStationActionRequest::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.BaseStationActionRequest.command)
}
inline void BaseStationActionRequest::set_command(const char* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.BaseStationActionRequest.command)
}
inline ::std::string* BaseStationActionRequest::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationActionRequest.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaseStationActionRequest::release_command() {
  // @@protoc_insertion_point(field_release:LTMessage.BaseStationActionRequest.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaseStationActionRequest::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BaseStationActionRequest.command)
}

// -------------------------------------------------------------------

// BaseStationActionResponse

// int32 sequence = 1;
inline void BaseStationActionResponse::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 BaseStationActionResponse::sequence() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationActionResponse.sequence)
  return sequence_;
}
inline void BaseStationActionResponse::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationActionResponse.sequence)
}

// .LTMessage.ResponseStatus status = 2;
inline bool BaseStationActionResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void BaseStationActionResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::LTMessage::ResponseStatus& BaseStationActionResponse::status() const {
  const ::LTMessage::ResponseStatus* p = status_;
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationActionResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::ResponseStatus*>(
      &::LTMessage::_ResponseStatus_default_instance_);
}
inline ::LTMessage::ResponseStatus* BaseStationActionResponse::release_status() {
  // @@protoc_insertion_point(field_release:LTMessage.BaseStationActionResponse.status)
  
  ::LTMessage::ResponseStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::LTMessage::ResponseStatus* BaseStationActionResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::LTMessage::ResponseStatus;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationActionResponse.status)
  return status_;
}
inline void BaseStationActionResponse::set_allocated_status(::LTMessage::ResponseStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BaseStationActionResponse.status)
}

// string bs_info = 3;
inline void BaseStationActionResponse::clear_bs_info() {
  bs_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BaseStationActionResponse::bs_info() const {
  // @@protoc_insertion_point(field_get:LTMessage.BaseStationActionResponse.bs_info)
  return bs_info_.GetNoArena();
}
inline void BaseStationActionResponse::set_bs_info(const ::std::string& value) {
  
  bs_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.BaseStationActionResponse.bs_info)
}
#if LANG_CXX11
inline void BaseStationActionResponse::set_bs_info(::std::string&& value) {
  
  bs_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.BaseStationActionResponse.bs_info)
}
#endif
inline void BaseStationActionResponse::set_bs_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bs_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.BaseStationActionResponse.bs_info)
}
inline void BaseStationActionResponse::set_bs_info(const char* value, size_t size) {
  
  bs_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.BaseStationActionResponse.bs_info)
}
inline ::std::string* BaseStationActionResponse::mutable_bs_info() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.BaseStationActionResponse.bs_info)
  return bs_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaseStationActionResponse::release_bs_info() {
  // @@protoc_insertion_point(field_release:LTMessage.BaseStationActionResponse.bs_info)
  
  return bs_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaseStationActionResponse::set_allocated_bs_info(::std::string* bs_info) {
  if (bs_info != NULL) {
    
  } else {
    
  }
  bs_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bs_info);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BaseStationActionResponse.bs_info)
}

// -------------------------------------------------------------------

// GuiHeartbeatRequest

// string mac_addr = 1;
inline void GuiHeartbeatRequest::clear_mac_addr() {
  mac_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GuiHeartbeatRequest::mac_addr() const {
  // @@protoc_insertion_point(field_get:LTMessage.GuiHeartbeatRequest.mac_addr)
  return mac_addr_.GetNoArena();
}
inline void GuiHeartbeatRequest::set_mac_addr(const ::std::string& value) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.GuiHeartbeatRequest.mac_addr)
}
#if LANG_CXX11
inline void GuiHeartbeatRequest::set_mac_addr(::std::string&& value) {
  
  mac_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.GuiHeartbeatRequest.mac_addr)
}
#endif
inline void GuiHeartbeatRequest::set_mac_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.GuiHeartbeatRequest.mac_addr)
}
inline void GuiHeartbeatRequest::set_mac_addr(const char* value, size_t size) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.GuiHeartbeatRequest.mac_addr)
}
inline ::std::string* GuiHeartbeatRequest::mutable_mac_addr() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.GuiHeartbeatRequest.mac_addr)
  return mac_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GuiHeartbeatRequest::release_mac_addr() {
  // @@protoc_insertion_point(field_release:LTMessage.GuiHeartbeatRequest.mac_addr)
  
  return mac_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GuiHeartbeatRequest::set_allocated_mac_addr(::std::string* mac_addr) {
  if (mac_addr != NULL) {
    
  } else {
    
  }
  mac_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_addr);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.GuiHeartbeatRequest.mac_addr)
}

// int32 sequence = 2;
inline void GuiHeartbeatRequest::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 GuiHeartbeatRequest::sequence() const {
  // @@protoc_insertion_point(field_get:LTMessage.GuiHeartbeatRequest.sequence)
  return sequence_;
}
inline void GuiHeartbeatRequest::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.GuiHeartbeatRequest.sequence)
}

// -------------------------------------------------------------------

// GuiHeartbeatResponse

// int32 sequence = 1;
inline void GuiHeartbeatResponse::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 GuiHeartbeatResponse::sequence() const {
  // @@protoc_insertion_point(field_get:LTMessage.GuiHeartbeatResponse.sequence)
  return sequence_;
}
inline void GuiHeartbeatResponse::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.GuiHeartbeatResponse.sequence)
}

// .LTMessage.ResponseStatus status = 2;
inline bool GuiHeartbeatResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void GuiHeartbeatResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::LTMessage::ResponseStatus& GuiHeartbeatResponse::status() const {
  const ::LTMessage::ResponseStatus* p = status_;
  // @@protoc_insertion_point(field_get:LTMessage.GuiHeartbeatResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::ResponseStatus*>(
      &::LTMessage::_ResponseStatus_default_instance_);
}
inline ::LTMessage::ResponseStatus* GuiHeartbeatResponse::release_status() {
  // @@protoc_insertion_point(field_release:LTMessage.GuiHeartbeatResponse.status)
  
  ::LTMessage::ResponseStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::LTMessage::ResponseStatus* GuiHeartbeatResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::LTMessage::ResponseStatus;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.GuiHeartbeatResponse.status)
  return status_;
}
inline void GuiHeartbeatResponse::set_allocated_status(::LTMessage::ResponseStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.GuiHeartbeatResponse.status)
}

// .LTMessage.UpdateEvent event = 3;
inline bool GuiHeartbeatResponse::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void GuiHeartbeatResponse::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
inline const ::LTMessage::UpdateEvent& GuiHeartbeatResponse::event() const {
  const ::LTMessage::UpdateEvent* p = event_;
  // @@protoc_insertion_point(field_get:LTMessage.GuiHeartbeatResponse.event)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::UpdateEvent*>(
      &::LTMessage::_UpdateEvent_default_instance_);
}
inline ::LTMessage::UpdateEvent* GuiHeartbeatResponse::release_event() {
  // @@protoc_insertion_point(field_release:LTMessage.GuiHeartbeatResponse.event)
  
  ::LTMessage::UpdateEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::LTMessage::UpdateEvent* GuiHeartbeatResponse::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::LTMessage::UpdateEvent;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.GuiHeartbeatResponse.event)
  return event_;
}
inline void GuiHeartbeatResponse::set_allocated_event(::LTMessage::UpdateEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    
  } else {
    
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.GuiHeartbeatResponse.event)
}

// repeated .LTMessage.TerminalExceptStatus term_except_status = 4;
inline int GuiHeartbeatResponse::term_except_status_size() const {
  return term_except_status_.size();
}
inline void GuiHeartbeatResponse::clear_term_except_status() {
  term_except_status_.Clear();
}
inline const ::LTMessage::TerminalExceptStatus& GuiHeartbeatResponse::term_except_status(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.GuiHeartbeatResponse.term_except_status)
  return term_except_status_.Get(index);
}
inline ::LTMessage::TerminalExceptStatus* GuiHeartbeatResponse::mutable_term_except_status(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.GuiHeartbeatResponse.term_except_status)
  return term_except_status_.Mutable(index);
}
inline ::LTMessage::TerminalExceptStatus* GuiHeartbeatResponse::add_term_except_status() {
  // @@protoc_insertion_point(field_add:LTMessage.GuiHeartbeatResponse.term_except_status)
  return term_except_status_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalExceptStatus >*
GuiHeartbeatResponse::mutable_term_except_status() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.GuiHeartbeatResponse.term_except_status)
  return &term_except_status_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTMessage::TerminalExceptStatus >&
GuiHeartbeatResponse::term_except_status() const {
  // @@protoc_insertion_point(field_list:LTMessage.GuiHeartbeatResponse.term_except_status)
  return term_except_status_;
}

// repeated .LTMessage.BasesExceptStatus bases_except_status = 5;
inline int GuiHeartbeatResponse::bases_except_status_size() const {
  return bases_except_status_.size();
}
inline void GuiHeartbeatResponse::clear_bases_except_status() {
  bases_except_status_.Clear();
}
inline const ::LTMessage::BasesExceptStatus& GuiHeartbeatResponse::bases_except_status(int index) const {
  // @@protoc_insertion_point(field_get:LTMessage.GuiHeartbeatResponse.bases_except_status)
  return bases_except_status_.Get(index);
}
inline ::LTMessage::BasesExceptStatus* GuiHeartbeatResponse::mutable_bases_except_status(int index) {
  // @@protoc_insertion_point(field_mutable:LTMessage.GuiHeartbeatResponse.bases_except_status)
  return bases_except_status_.Mutable(index);
}
inline ::LTMessage::BasesExceptStatus* GuiHeartbeatResponse::add_bases_except_status() {
  // @@protoc_insertion_point(field_add:LTMessage.GuiHeartbeatResponse.bases_except_status)
  return bases_except_status_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LTMessage::BasesExceptStatus >*
GuiHeartbeatResponse::mutable_bases_except_status() {
  // @@protoc_insertion_point(field_mutable_list:LTMessage.GuiHeartbeatResponse.bases_except_status)
  return &bases_except_status_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LTMessage::BasesExceptStatus >&
GuiHeartbeatResponse::bases_except_status() const {
  // @@protoc_insertion_point(field_list:LTMessage.GuiHeartbeatResponse.bases_except_status)
  return bases_except_status_;
}

// -------------------------------------------------------------------

// TerminalHeartbeatRequest

// int32 sequence = 1;
inline void TerminalHeartbeatRequest::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 TerminalHeartbeatRequest::sequence() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalHeartbeatRequest.sequence)
  return sequence_;
}
inline void TerminalHeartbeatRequest::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalHeartbeatRequest.sequence)
}

// bool ok_status = 2;
inline void TerminalHeartbeatRequest::clear_ok_status() {
  ok_status_ = false;
}
inline bool TerminalHeartbeatRequest::ok_status() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalHeartbeatRequest.ok_status)
  return ok_status_;
}
inline void TerminalHeartbeatRequest::set_ok_status(bool value) {
  
  ok_status_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalHeartbeatRequest.ok_status)
}

// .LTMessage.TerminalExceptStatus except_status_detail = 3;
inline bool TerminalHeartbeatRequest::has_except_status_detail() const {
  return this != internal_default_instance() && except_status_detail_ != NULL;
}
inline void TerminalHeartbeatRequest::clear_except_status_detail() {
  if (GetArenaNoVirtual() == NULL && except_status_detail_ != NULL) {
    delete except_status_detail_;
  }
  except_status_detail_ = NULL;
}
inline const ::LTMessage::TerminalExceptStatus& TerminalHeartbeatRequest::except_status_detail() const {
  const ::LTMessage::TerminalExceptStatus* p = except_status_detail_;
  // @@protoc_insertion_point(field_get:LTMessage.TerminalHeartbeatRequest.except_status_detail)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::TerminalExceptStatus*>(
      &::LTMessage::_TerminalExceptStatus_default_instance_);
}
inline ::LTMessage::TerminalExceptStatus* TerminalHeartbeatRequest::release_except_status_detail() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalHeartbeatRequest.except_status_detail)
  
  ::LTMessage::TerminalExceptStatus* temp = except_status_detail_;
  except_status_detail_ = NULL;
  return temp;
}
inline ::LTMessage::TerminalExceptStatus* TerminalHeartbeatRequest::mutable_except_status_detail() {
  
  if (except_status_detail_ == NULL) {
    except_status_detail_ = new ::LTMessage::TerminalExceptStatus;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalHeartbeatRequest.except_status_detail)
  return except_status_detail_;
}
inline void TerminalHeartbeatRequest::set_allocated_except_status_detail(::LTMessage::TerminalExceptStatus* except_status_detail) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete except_status_detail_;
  }
  if (except_status_detail) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      except_status_detail = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, except_status_detail, submessage_arena);
    }
    
  } else {
    
  }
  except_status_detail_ = except_status_detail;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalHeartbeatRequest.except_status_detail)
}

// -------------------------------------------------------------------

// TerminalHeartbeatResponse

// int32 sequence = 1;
inline void TerminalHeartbeatResponse::clear_sequence() {
  sequence_ = 0;
}
inline ::google::protobuf::int32 TerminalHeartbeatResponse::sequence() const {
  // @@protoc_insertion_point(field_get:LTMessage.TerminalHeartbeatResponse.sequence)
  return sequence_;
}
inline void TerminalHeartbeatResponse::set_sequence(::google::protobuf::int32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.TerminalHeartbeatResponse.sequence)
}

// .LTMessage.ResponseStatus status = 2;
inline bool TerminalHeartbeatResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void TerminalHeartbeatResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::LTMessage::ResponseStatus& TerminalHeartbeatResponse::status() const {
  const ::LTMessage::ResponseStatus* p = status_;
  // @@protoc_insertion_point(field_get:LTMessage.TerminalHeartbeatResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::ResponseStatus*>(
      &::LTMessage::_ResponseStatus_default_instance_);
}
inline ::LTMessage::ResponseStatus* TerminalHeartbeatResponse::release_status() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalHeartbeatResponse.status)
  
  ::LTMessage::ResponseStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::LTMessage::ResponseStatus* TerminalHeartbeatResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::LTMessage::ResponseStatus;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalHeartbeatResponse.status)
  return status_;
}
inline void TerminalHeartbeatResponse::set_allocated_status(::LTMessage::ResponseStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalHeartbeatResponse.status)
}

// .LTMessage.UpdateEvent event = 3;
inline bool TerminalHeartbeatResponse::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void TerminalHeartbeatResponse::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
inline const ::LTMessage::UpdateEvent& TerminalHeartbeatResponse::event() const {
  const ::LTMessage::UpdateEvent* p = event_;
  // @@protoc_insertion_point(field_get:LTMessage.TerminalHeartbeatResponse.event)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::UpdateEvent*>(
      &::LTMessage::_UpdateEvent_default_instance_);
}
inline ::LTMessage::UpdateEvent* TerminalHeartbeatResponse::release_event() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalHeartbeatResponse.event)
  
  ::LTMessage::UpdateEvent* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::LTMessage::UpdateEvent* TerminalHeartbeatResponse::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::LTMessage::UpdateEvent;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalHeartbeatResponse.event)
  return event_;
}
inline void TerminalHeartbeatResponse::set_allocated_event(::LTMessage::UpdateEvent* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    
  } else {
    
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalHeartbeatResponse.event)
}

// .LTMessage.TerminalActionRequest action_request_from_gui = 4;
inline bool TerminalHeartbeatResponse::has_action_request_from_gui() const {
  return this != internal_default_instance() && action_request_from_gui_ != NULL;
}
inline void TerminalHeartbeatResponse::clear_action_request_from_gui() {
  if (GetArenaNoVirtual() == NULL && action_request_from_gui_ != NULL) {
    delete action_request_from_gui_;
  }
  action_request_from_gui_ = NULL;
}
inline const ::LTMessage::TerminalActionRequest& TerminalHeartbeatResponse::action_request_from_gui() const {
  const ::LTMessage::TerminalActionRequest* p = action_request_from_gui_;
  // @@protoc_insertion_point(field_get:LTMessage.TerminalHeartbeatResponse.action_request_from_gui)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::TerminalActionRequest*>(
      &::LTMessage::_TerminalActionRequest_default_instance_);
}
inline ::LTMessage::TerminalActionRequest* TerminalHeartbeatResponse::release_action_request_from_gui() {
  // @@protoc_insertion_point(field_release:LTMessage.TerminalHeartbeatResponse.action_request_from_gui)
  
  ::LTMessage::TerminalActionRequest* temp = action_request_from_gui_;
  action_request_from_gui_ = NULL;
  return temp;
}
inline ::LTMessage::TerminalActionRequest* TerminalHeartbeatResponse::mutable_action_request_from_gui() {
  
  if (action_request_from_gui_ == NULL) {
    action_request_from_gui_ = new ::LTMessage::TerminalActionRequest;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.TerminalHeartbeatResponse.action_request_from_gui)
  return action_request_from_gui_;
}
inline void TerminalHeartbeatResponse::set_allocated_action_request_from_gui(::LTMessage::TerminalActionRequest* action_request_from_gui) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete action_request_from_gui_;
  }
  if (action_request_from_gui) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      action_request_from_gui = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_request_from_gui, submessage_arena);
    }
    
  } else {
    
  }
  action_request_from_gui_ = action_request_from_gui;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.TerminalHeartbeatResponse.action_request_from_gui)
}

// -------------------------------------------------------------------

// FieldPropertyUpdateRequest_FieldScope

// double min_x = 1;
inline void FieldPropertyUpdateRequest_FieldScope::clear_min_x() {
  min_x_ = 0;
}
inline double FieldPropertyUpdateRequest_FieldScope::min_x() const {
  // @@protoc_insertion_point(field_get:LTMessage.FieldPropertyUpdateRequest.FieldScope.min_x)
  return min_x_;
}
inline void FieldPropertyUpdateRequest_FieldScope::set_min_x(double value) {
  
  min_x_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.FieldPropertyUpdateRequest.FieldScope.min_x)
}

// double min_y = 2;
inline void FieldPropertyUpdateRequest_FieldScope::clear_min_y() {
  min_y_ = 0;
}
inline double FieldPropertyUpdateRequest_FieldScope::min_y() const {
  // @@protoc_insertion_point(field_get:LTMessage.FieldPropertyUpdateRequest.FieldScope.min_y)
  return min_y_;
}
inline void FieldPropertyUpdateRequest_FieldScope::set_min_y(double value) {
  
  min_y_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.FieldPropertyUpdateRequest.FieldScope.min_y)
}

// double min_z = 3;
inline void FieldPropertyUpdateRequest_FieldScope::clear_min_z() {
  min_z_ = 0;
}
inline double FieldPropertyUpdateRequest_FieldScope::min_z() const {
  // @@protoc_insertion_point(field_get:LTMessage.FieldPropertyUpdateRequest.FieldScope.min_z)
  return min_z_;
}
inline void FieldPropertyUpdateRequest_FieldScope::set_min_z(double value) {
  
  min_z_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.FieldPropertyUpdateRequest.FieldScope.min_z)
}

// double max_x = 4;
inline void FieldPropertyUpdateRequest_FieldScope::clear_max_x() {
  max_x_ = 0;
}
inline double FieldPropertyUpdateRequest_FieldScope::max_x() const {
  // @@protoc_insertion_point(field_get:LTMessage.FieldPropertyUpdateRequest.FieldScope.max_x)
  return max_x_;
}
inline void FieldPropertyUpdateRequest_FieldScope::set_max_x(double value) {
  
  max_x_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.FieldPropertyUpdateRequest.FieldScope.max_x)
}

// double max_y = 5;
inline void FieldPropertyUpdateRequest_FieldScope::clear_max_y() {
  max_y_ = 0;
}
inline double FieldPropertyUpdateRequest_FieldScope::max_y() const {
  // @@protoc_insertion_point(field_get:LTMessage.FieldPropertyUpdateRequest.FieldScope.max_y)
  return max_y_;
}
inline void FieldPropertyUpdateRequest_FieldScope::set_max_y(double value) {
  
  max_y_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.FieldPropertyUpdateRequest.FieldScope.max_y)
}

// double max_z = 6;
inline void FieldPropertyUpdateRequest_FieldScope::clear_max_z() {
  max_z_ = 0;
}
inline double FieldPropertyUpdateRequest_FieldScope::max_z() const {
  // @@protoc_insertion_point(field_get:LTMessage.FieldPropertyUpdateRequest.FieldScope.max_z)
  return max_z_;
}
inline void FieldPropertyUpdateRequest_FieldScope::set_max_z(double value) {
  
  max_z_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.FieldPropertyUpdateRequest.FieldScope.max_z)
}

// -------------------------------------------------------------------

// FieldPropertyUpdateRequest

// .LTMessage.FieldPropertyUpdateRequest.FieldScope field_scope = 1;
inline bool FieldPropertyUpdateRequest::has_field_scope() const {
  return this != internal_default_instance() && field_scope_ != NULL;
}
inline void FieldPropertyUpdateRequest::clear_field_scope() {
  if (GetArenaNoVirtual() == NULL && field_scope_ != NULL) {
    delete field_scope_;
  }
  field_scope_ = NULL;
}
inline const ::LTMessage::FieldPropertyUpdateRequest_FieldScope& FieldPropertyUpdateRequest::field_scope() const {
  const ::LTMessage::FieldPropertyUpdateRequest_FieldScope* p = field_scope_;
  // @@protoc_insertion_point(field_get:LTMessage.FieldPropertyUpdateRequest.field_scope)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::FieldPropertyUpdateRequest_FieldScope*>(
      &::LTMessage::_FieldPropertyUpdateRequest_FieldScope_default_instance_);
}
inline ::LTMessage::FieldPropertyUpdateRequest_FieldScope* FieldPropertyUpdateRequest::release_field_scope() {
  // @@protoc_insertion_point(field_release:LTMessage.FieldPropertyUpdateRequest.field_scope)
  
  ::LTMessage::FieldPropertyUpdateRequest_FieldScope* temp = field_scope_;
  field_scope_ = NULL;
  return temp;
}
inline ::LTMessage::FieldPropertyUpdateRequest_FieldScope* FieldPropertyUpdateRequest::mutable_field_scope() {
  
  if (field_scope_ == NULL) {
    field_scope_ = new ::LTMessage::FieldPropertyUpdateRequest_FieldScope;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.FieldPropertyUpdateRequest.field_scope)
  return field_scope_;
}
inline void FieldPropertyUpdateRequest::set_allocated_field_scope(::LTMessage::FieldPropertyUpdateRequest_FieldScope* field_scope) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete field_scope_;
  }
  if (field_scope) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      field_scope = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, field_scope, submessage_arena);
    }
    
  } else {
    
  }
  field_scope_ = field_scope;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.FieldPropertyUpdateRequest.field_scope)
}

// -------------------------------------------------------------------

// FieldPropertyUpdateResponse

// .LTMessage.ResponseStatus status = 1;
inline bool FieldPropertyUpdateResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline void FieldPropertyUpdateResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
inline const ::LTMessage::ResponseStatus& FieldPropertyUpdateResponse::status() const {
  const ::LTMessage::ResponseStatus* p = status_;
  // @@protoc_insertion_point(field_get:LTMessage.FieldPropertyUpdateResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::LTMessage::ResponseStatus*>(
      &::LTMessage::_ResponseStatus_default_instance_);
}
inline ::LTMessage::ResponseStatus* FieldPropertyUpdateResponse::release_status() {
  // @@protoc_insertion_point(field_release:LTMessage.FieldPropertyUpdateResponse.status)
  
  ::LTMessage::ResponseStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::LTMessage::ResponseStatus* FieldPropertyUpdateResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::LTMessage::ResponseStatus;
  }
  // @@protoc_insertion_point(field_mutable:LTMessage.FieldPropertyUpdateResponse.status)
  return status_;
}
inline void FieldPropertyUpdateResponse::set_allocated_status(::LTMessage::ResponseStatus* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete status_;
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:LTMessage.FieldPropertyUpdateResponse.status)
}

// -------------------------------------------------------------------

// ControllerBroadcast

// string ip_addr = 1;
inline void ControllerBroadcast::clear_ip_addr() {
  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ControllerBroadcast::ip_addr() const {
  // @@protoc_insertion_point(field_get:LTMessage.ControllerBroadcast.ip_addr)
  return ip_addr_.GetNoArena();
}
inline void ControllerBroadcast::set_ip_addr(const ::std::string& value) {
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.ControllerBroadcast.ip_addr)
}
#if LANG_CXX11
inline void ControllerBroadcast::set_ip_addr(::std::string&& value) {
  
  ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.ControllerBroadcast.ip_addr)
}
#endif
inline void ControllerBroadcast::set_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.ControllerBroadcast.ip_addr)
}
inline void ControllerBroadcast::set_ip_addr(const char* value, size_t size) {
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.ControllerBroadcast.ip_addr)
}
inline ::std::string* ControllerBroadcast::mutable_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.ControllerBroadcast.ip_addr)
  return ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ControllerBroadcast::release_ip_addr() {
  // @@protoc_insertion_point(field_release:LTMessage.ControllerBroadcast.ip_addr)
  
  return ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ControllerBroadcast::set_allocated_ip_addr(::std::string* ip_addr) {
  if (ip_addr != NULL) {
    
  } else {
    
  }
  ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_addr);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.ControllerBroadcast.ip_addr)
}

// int32 terminal_port = 2;
inline void ControllerBroadcast::clear_terminal_port() {
  terminal_port_ = 0;
}
inline ::google::protobuf::int32 ControllerBroadcast::terminal_port() const {
  // @@protoc_insertion_point(field_get:LTMessage.ControllerBroadcast.terminal_port)
  return terminal_port_;
}
inline void ControllerBroadcast::set_terminal_port(::google::protobuf::int32 value) {
  
  terminal_port_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.ControllerBroadcast.terminal_port)
}

// int32 manager_port = 3;
inline void ControllerBroadcast::clear_manager_port() {
  manager_port_ = 0;
}
inline ::google::protobuf::int32 ControllerBroadcast::manager_port() const {
  // @@protoc_insertion_point(field_get:LTMessage.ControllerBroadcast.manager_port)
  return manager_port_;
}
inline void ControllerBroadcast::set_manager_port(::google::protobuf::int32 value) {
  
  manager_port_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.ControllerBroadcast.manager_port)
}

// int32 loc_xsub_port = 4;
inline void ControllerBroadcast::clear_loc_xsub_port() {
  loc_xsub_port_ = 0;
}
inline ::google::protobuf::int32 ControllerBroadcast::loc_xsub_port() const {
  // @@protoc_insertion_point(field_get:LTMessage.ControllerBroadcast.loc_xsub_port)
  return loc_xsub_port_;
}
inline void ControllerBroadcast::set_loc_xsub_port(::google::protobuf::int32 value) {
  
  loc_xsub_port_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.ControllerBroadcast.loc_xsub_port)
}

// int32 loc_xpub_port = 5;
inline void ControllerBroadcast::clear_loc_xpub_port() {
  loc_xpub_port_ = 0;
}
inline ::google::protobuf::int32 ControllerBroadcast::loc_xpub_port() const {
  // @@protoc_insertion_point(field_get:LTMessage.ControllerBroadcast.loc_xpub_port)
  return loc_xpub_port_;
}
inline void ControllerBroadcast::set_loc_xpub_port(::google::protobuf::int32 value) {
  
  loc_xpub_port_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.ControllerBroadcast.loc_xpub_port)
}

// .LTMessage.ControllerBroadcast.ControllerType type = 6;
inline void ControllerBroadcast::clear_type() {
  type_ = 0;
}
inline ::LTMessage::ControllerBroadcast_ControllerType ControllerBroadcast::type() const {
  // @@protoc_insertion_point(field_get:LTMessage.ControllerBroadcast.type)
  return static_cast< ::LTMessage::ControllerBroadcast_ControllerType >(type_);
}
inline void ControllerBroadcast::set_type(::LTMessage::ControllerBroadcast_ControllerType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.ControllerBroadcast.type)
}

// -------------------------------------------------------------------

// BroadcastResponse

// .LTMessage.BroadcastResponse.ResponseType type = 1;
inline void BroadcastResponse::clear_type() {
  type_ = 0;
}
inline ::LTMessage::BroadcastResponse_ResponseType BroadcastResponse::type() const {
  // @@protoc_insertion_point(field_get:LTMessage.BroadcastResponse.type)
  return static_cast< ::LTMessage::BroadcastResponse_ResponseType >(type_);
}
inline void BroadcastResponse::set_type(::LTMessage::BroadcastResponse_ResponseType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:LTMessage.BroadcastResponse.type)
}

// string ip_addr = 2;
inline void BroadcastResponse::clear_ip_addr() {
  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BroadcastResponse::ip_addr() const {
  // @@protoc_insertion_point(field_get:LTMessage.BroadcastResponse.ip_addr)
  return ip_addr_.GetNoArena();
}
inline void BroadcastResponse::set_ip_addr(const ::std::string& value) {
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.BroadcastResponse.ip_addr)
}
#if LANG_CXX11
inline void BroadcastResponse::set_ip_addr(::std::string&& value) {
  
  ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.BroadcastResponse.ip_addr)
}
#endif
inline void BroadcastResponse::set_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.BroadcastResponse.ip_addr)
}
inline void BroadcastResponse::set_ip_addr(const char* value, size_t size) {
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.BroadcastResponse.ip_addr)
}
inline ::std::string* BroadcastResponse::mutable_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.BroadcastResponse.ip_addr)
  return ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastResponse::release_ip_addr() {
  // @@protoc_insertion_point(field_release:LTMessage.BroadcastResponse.ip_addr)
  
  return ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastResponse::set_allocated_ip_addr(::std::string* ip_addr) {
  if (ip_addr != NULL) {
    
  } else {
    
  }
  ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_addr);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BroadcastResponse.ip_addr)
}

// string mac_addr = 3;
inline void BroadcastResponse::clear_mac_addr() {
  mac_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BroadcastResponse::mac_addr() const {
  // @@protoc_insertion_point(field_get:LTMessage.BroadcastResponse.mac_addr)
  return mac_addr_.GetNoArena();
}
inline void BroadcastResponse::set_mac_addr(const ::std::string& value) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.BroadcastResponse.mac_addr)
}
#if LANG_CXX11
inline void BroadcastResponse::set_mac_addr(::std::string&& value) {
  
  mac_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.BroadcastResponse.mac_addr)
}
#endif
inline void BroadcastResponse::set_mac_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.BroadcastResponse.mac_addr)
}
inline void BroadcastResponse::set_mac_addr(const char* value, size_t size) {
  
  mac_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.BroadcastResponse.mac_addr)
}
inline ::std::string* BroadcastResponse::mutable_mac_addr() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.BroadcastResponse.mac_addr)
  return mac_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastResponse::release_mac_addr() {
  // @@protoc_insertion_point(field_release:LTMessage.BroadcastResponse.mac_addr)
  
  return mac_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastResponse::set_allocated_mac_addr(::std::string* mac_addr) {
  if (mac_addr != NULL) {
    
  } else {
    
  }
  mac_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac_addr);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BroadcastResponse.mac_addr)
}

// string host_name = 4;
inline void BroadcastResponse::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BroadcastResponse::host_name() const {
  // @@protoc_insertion_point(field_get:LTMessage.BroadcastResponse.host_name)
  return host_name_.GetNoArena();
}
inline void BroadcastResponse::set_host_name(const ::std::string& value) {
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LTMessage.BroadcastResponse.host_name)
}
#if LANG_CXX11
inline void BroadcastResponse::set_host_name(::std::string&& value) {
  
  host_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LTMessage.BroadcastResponse.host_name)
}
#endif
inline void BroadcastResponse::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LTMessage.BroadcastResponse.host_name)
}
inline void BroadcastResponse::set_host_name(const char* value, size_t size) {
  
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LTMessage.BroadcastResponse.host_name)
}
inline ::std::string* BroadcastResponse::mutable_host_name() {
  
  // @@protoc_insertion_point(field_mutable:LTMessage.BroadcastResponse.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BroadcastResponse::release_host_name() {
  // @@protoc_insertion_point(field_release:LTMessage.BroadcastResponse.host_name)
  
  return host_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BroadcastResponse::set_allocated_host_name(::std::string* host_name) {
  if (host_name != NULL) {
    
  } else {
    
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:LTMessage.BroadcastResponse.host_name)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace LTMessage

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::LTMessage::Location_LocationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTMessage::Location_LocationType>() {
  return ::LTMessage::Location_LocationType_descriptor();
}
template <> struct is_proto_enum< ::LTMessage::ResponseStatus_StatusCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTMessage::ResponseStatus_StatusCode>() {
  return ::LTMessage::ResponseStatus_StatusCode_descriptor();
}
template <> struct is_proto_enum< ::LTMessage::UpdateEvent_Event> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTMessage::UpdateEvent_Event>() {
  return ::LTMessage::UpdateEvent_Event_descriptor();
}
template <> struct is_proto_enum< ::LTMessage::TerminalPropertyRequest_RequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTMessage::TerminalPropertyRequest_RequestType>() {
  return ::LTMessage::TerminalPropertyRequest_RequestType_descriptor();
}
template <> struct is_proto_enum< ::LTMessage::TerminalActionRequest_RequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTMessage::TerminalActionRequest_RequestType>() {
  return ::LTMessage::TerminalActionRequest_RequestType_descriptor();
}
template <> struct is_proto_enum< ::LTMessage::BaseStationPropertyRequest_RequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTMessage::BaseStationPropertyRequest_RequestType>() {
  return ::LTMessage::BaseStationPropertyRequest_RequestType_descriptor();
}
template <> struct is_proto_enum< ::LTMessage::ControllerBroadcast_ControllerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTMessage::ControllerBroadcast_ControllerType>() {
  return ::LTMessage::ControllerBroadcast_ControllerType_descriptor();
}
template <> struct is_proto_enum< ::LTMessage::BroadcastResponse_ResponseType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::LTMessage::BroadcastResponse_ResponseType>() {
  return ::LTMessage::BroadcastResponse_ResponseType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LT_2emessage_2eproto__INCLUDED
